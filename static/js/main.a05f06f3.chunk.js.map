{"version":3,"sources":["JS/_Date.mjs","JS/store.js","Сomponents/Login/authModule.mjs","JS/index.js","JS/fetchAPI.mjs","JS/setBookingsData.mjs","JS/request.mjs","Hooks/useBus.js","Сomponents/Bars/BottomBar.jsx","Сomponents/Bars/InstrReqTab.jsx","Сomponents/Bars/TopBar.jsx","Сomponents/BookingsTable/scrollServ.jsx","Hooks/useIntersect.js","Сomponents/BookingsTable/RecEdButtons.jsx","Сomponents/BookingsTable/BT_Tbody.jsx","Сomponents/BookingsTable/BookingsTable.jsx","Сomponents/BookingsTable/index.js","Сomponents/FreetimeTable/scrollServ.js","Сomponents/FreetimeTable/FreetimeTable.jsx","Сomponents/FreetimeTable/index.js","Сomponents/Login/LoginInfo.jsx","Сomponents/Login/LoginForm.jsx","Сomponents/Login/index.js","Сomponents/FlyersEditor/serv.js","Сomponents/FlyersEditor/Autocomplete/Autocomplete.jsx","Сomponents/FlyersEditor/Autocomplete/index.js","Сomponents/FlyersEditor/FlyersEditor.jsx","Сomponents/FlyersEditor/index.js","Сomponents/BookingEditor/bedHelpers.jsx","Сomponents/BookingEditor/SubmitBlock.jsx","Сomponents/BookingEditor/DateTimeInput.jsx","Сomponents/BookingEditor/TimeValInput.jsx","Сomponents/BookingEditor/BookingEditorBaseForm.jsx","Сomponents/BookingEditor/BookingEditor.jsx","Сomponents/BookingEditor/index.js","Сomponents/BookingEditor/BookingEditorLight.jsx","Сomponents/App.jsx","main.js"],"names":["_Date","m30","hr24","GMToffset","Date","getTimezoneOffset","longLocaleStrOptions","weekday","year","month","day","timeStrToMS","str","timeArr","split","length","UTC","dateMsToDateN","dateMs","Math","trunc","dateToYYYYMMDD","srcDate","delimeter","getFullYear","getMonth","getDate","dateToLongStrRu","date","toLocaleDateString","dayNumToCustomDateObj","dayN","customDate","msToSlotN","msTime","slotN","slotStrToMs","slotStr","hh","msToCustomDateObj","toggleGMT","timeMS","getTime","dateN","monthN","getUTCMonth","getUTCDate","timeStr","getUTCHours","getUTCMinutes","dayWeekN","getUTCDay","HDay","isHoliday","dayName","indexOf","TIME_SLOTS","Object","freeze","timeSlotsArr","i","push","getTimeSlotsArr","APP_CONSTANTS","bookingsAPIDataMap","bookingIdCI","history","timeCI","timeValCI","tarif","fullname","notes","status","flyerId","email","phone","bookingsViewPosArr","bookingsArrMap","flyersAPI_dataMap","catid","firstname","secondname","lastname","BT_DATES_OFFSET","stOffset","endOffset","FT_DATES_OFFSET","BASE_PATH","process","DEFAULT_SOURCE","GAS_DEV_BS_URL","GAS_MASTER_BS_URL","shiftChangeAppUrl","APP_VARS","user","name","mail","ps","role","bookingsData","arr","obj","reqs","loading","upd","flyersData","new","editorState","showEditor","showModal","period","reqDate","stDate","endDate","event","bookingsTable","tableDateN","curTbodyInfo","headerStr","testText","freetimeTable","minTime","sidebarState","isToggled","curObj","viewTime","testState","pending","error","undefined","data","logger","getState","next","action","console","log","type","payload","mainStateSlice","createSlice","initialState","reducers","userDataUPD","state","assign","periodUPD","bookingsDataUPD","bookingsDayDataUPD","dayData","bookingsLoadingUPD","toggleFlyerEditorMD","flyersDataUPD","raw","newFlyerDataUPD","flyerEditorStateUPD","flyerEditorModalUPD","EventUPD","bookingsTableState","tbodyInViewUPD","bTableDateUPD","freetimeTableState","minTimeUPD","ftTableDateUPD","testActionMD","JSON","stringify","pendingUPD","errorUPD","dataUPD","toggleSidebarMD","sidebar_curObjUPD","bookingEditorModalUPD","sidebar_viewTimeUPD","actions","SELECTORS","bookingsObj","mainState","bookingsDayObj","bookingsObjDateNs","dateNsArr","fromEntries","map","bookingsUpd","instrRequests","flyersData_showEditor","flyersData_showModal","flyersDataRaw","flyersData_newName","newName","flyersData_editorState","userObj","bTableDateN","ftTableDateN","sidebar","sidebar_isToggled","sidebar_curObj","sidebar_InitData","booking_showModal","sidebar_viewTime","testFetchState","store","configureStore","reducer","middleware","getDefaultMiddleware","immutableCheck","warnAfter","serializableCheck","concat","tbInViewUpd_ThunkCreator","newTbodyInfo","dispatch","curTableDateN","curViewDateN","newViewDateN","newTableDateN","setUser","localStorage","getItem","buttonId","text","slice","document","getElementById","innerText","getUser","logOut","clear","DEFAULT_FETCH_OPT","checkStatus","response","ok","Promise","resolve","reject","Error","statusText","retJSON","json","proceedJSON","parsedData","servText","content","errorHandling","setError","prepareFetchOptions","sourceUrl","reqObj","url","params","options","method","parameter","body","append","encodeURIComponent","fetchAPI","fetch","then","catch","proceedSourceBookingsArr","bookingsArr","API_Map","VIEW_Map","ViewTimeCI","APIDataRec","curRecSlice","parse","time","id","timeFlight","reqTime","parseReqObj","field","sort","a","b","bookingsDataToObj","apiSubRecStCI","veiwSubRecStCI","colCnt","subRecTmp","Array","fill","stDateN","endDateN","RES_BOOKING_DATA","RES_B_OBJ","resObj","forEach","slot","makeResRec","initResObj","curTime","curTimeVal","parseCurTime","curDateN","curTimeN","curTimeIndex","timeAccum","curResRec","groupTimeSlots","spreadOverTime","_defValidation","fetchResult","_defValidationErrorHandler","command","responseObj","responseData","warn","_defModification","API_REQUEST","requestObj","source","validation","modification","USER","nick","REQ_GETBOOKINGS","days","isNaN","setHours","noLS","saveBookings","getLastUpdate","subject","bookings","flyers","bookingsDataObj","window","setItem","loadFlyersData","saveFlyersData","API_CANCEL_BOOKING","bookingId","API_CHANGE_BOOKING","bookingObj","API_ADD_BOOKING","instrMode","flyerObj","subscribers","subscribe","filter","callback","subscriber","evDispatch","args","dir","useBus","deps","useEffect","SHIFTCHANGE_APP_URL","Spacer","style","width","ShiftsButton","className","onClick","open","NavButton","btnText","mode","prev","BottomBar","TEST_BTN","memo","includes","backgroundColor","color","InstrReqTab","useSelector","ADMIN_TOGGLE","keys","requests","values","reqValue","replace","value","placeholder","props","onChange","e","target","toLocaleString","modeMap","href","HMBtn","HomeButton","MinTimeButton","dateImageOptions","setReqDate","getPeriod","ReqDateButton","reqDateStr","imageReqDateString","ReloadButton","updateBookings","LoginButton","useDispatch","confirm","loginButtonClick","prompt","ModeButtonRTD","navigate","TopBar","default","scrollToDay","direction","_defShownHour","targetDateObj","cur","targetDateN","targetTime","scrollToTime","now","scrollOptions","block","containerNode","parentNode","reqDateN","reqTimeSlot","targetId","targetNode","targetPosition","getBoundingClientRect","containerPosition","top","bottom","scrollIntoView","observer","observeToScroll","setTimeout","disconnect","tbodyId","trPartId","node","MutationObserver","mutationsList","mutation","addedNodes","takeRecords","observe","childList","useIntersect","onEntries","onlyOnce","intersected","useRef","targetRef","handleIntersect","useCallback","entries","isIntersecting","current","IntersectionObserver","addRecOnClick","ADDREC_BTN","freeTimeText","editRecOnClick","EDITREC_BTN","TbodyHeaderOnClik","TbodyHeader","dateObj","colsCnt","colSpan","getDateTbodyVals","dayDataObj","restStCI","COLS_CNT","nowTime","curDateObj","dateStr","getHeaderStrForDay","rowsJSXArr","tSlot","curSlotTrJSXarr","curTSlotN","Number","curTimeStr","freeTime","instrReq","has","matchSidebarTime","curRowsDataArr","rowSpan","curThJSX","doThJSX","curTr0Id","trClassStr","getTrClassList","minFreeTime","timeSlotN","subTd0_JSXArr","doFreetimeTdJSX","doSubTdJSXArr","curTr0JSX","subStrArr","doSubTrJSXArr","rowDataArr","tdJSXArr","element","subDataArr","trClassOptions","dayNight","oddity","noTime","pastTime","reduce","acc","classOpt","DateTbody","tbodyData","dispatcher","intersectOptions","root","rootMargin","intersectFunc","setTBodyIntersect","ref","BT_HEADER_USER","height","viewBox","d","BT_HEADER_ARR","BT_HEADER_COLS_ARR","item","BT_BLANK_TBODY","BT_EVENTS","DayInViewDiv","BookingsTableHeader","TbodyesSet","bookingDataObj","shallowEqual","Set","instrRequest","BookingsTable","recDateMs","from","_","jumpDate","useJumpToSidebarViewTime","sideBarTime","daysNs","tdBookingEd","timeMs","dayIndex","timeToTdId","behavior","inline","margin_left","margin_right","margin_vertical","left","right","scrollToTdId","ftOnClick","tdId","nodeName","val","parseTdIndex","slotIndex","timeSlot","getDaysNsArr","reqDayN","datesOffsetArr","doTdArr","bokingsAllDataObj","NOW_DATE_N","tdArr","unshift","iDay","dayBokingData","dayObj","HDayStr","isPast","ci","iSlot","ri","tdID","freeTimeVal","tdClass","tdClassName","isInBED","getTdClassName","adjRows","Tr0","children","TrSlot","thText","groupClass","groupName","getTrClassName","FreetimeTable","timeSlots","useGetReqDaysData","ev","trArr","timeHeader","LoginInfo","message","closeAction","timeout","timerId","clearTimeout","loginResponseHandler","ReqResult","loginResponse","clearedResponse","apiResponse","clearedApiResponse","test","checkApiResponse","storeUser","loginFetch","reqData","password","getSubmit","setLoginfoCall","responseHandler","location","reload","timeEnd","LoginForm","useForm","register","setValue","handleSubmit","formState","useState","loginfoCall","errors","touchedFields","isSubmitting","noValidate","onSubmit","htmlFor","required","pattern","disabled","tabIndex","API_FLYERS_MAP","FLYERS_ED_DATACHECK","toString","findFlyerData","flyersDataMap","flyerData","find","rec","fieldName","SuggestionsListComponent","filteredSuggestions","activeSuggestion","onMouseOver","onMouseOut","suggestion","index","visualisation","onChoose","foundId","setState","setFlyerInput","showSuggestions","userInput","onFocus","select","Autocomplete","React","forwardRef","initValue","ONLY_REGISTRED","flyersFilter","flyersMap","limit","testStr","toLowerCase","keyIndex","resFields","record","getFlyersFilter","spellCheck","currentTarget","newFlyerSuggestion","onKeyDown","keyCode","preventDefault","choice","dataset","suggestionIndex","sindex","DEFAULT_FLYERS_VALS","CAT_ID_MAP","ПР","Спорт","Дети","Сотрудник","Дилер","CAT_ID_OPTIONS","category","setupNewFlyer","flyerInput","flyerInputData","addFlyer","reqFieldsMap","flyerDataArr","fieldIndex","API_ADD_FLYER","addFlyerResponse","newFlyerRecord","EVENT","closeFlyersEditor","containerClick","FlyersEditor","defaultValues","trigger","reset","flyerEditorState","flyerEditorModal","choosenFlyerData","flyerRec","setupExistingFlyer","fullnameActive","isValid","PAYMENT_ENUM","TARIF_MAP","GET_INITIAL_VALUES","valuesPassed","submitOptions","sumbitChoice","resultObj","getFromWatchedMainVals","namesArr","parseDateTime","dateTime","RecDate","TimeSlotN","Flight_Date","toISOString","substring","TimeSlot","dateTimeStr","useUpdateValues","getValues","currentValues","shouldDirty","useSetInitialValues","getInitialValues","_initialValuesPassed","set_initialValuesPassed","useMemo","autoClose","postAction","cancelBooking","changeBooking","sumbitChanges","targetCI","newBookingId","addBooking","messageDelay","closeSidebar","changes","bookingDataArr","bookingData","key","SubmitBlock","control","buttonsText","useWatch","isDirty","SubmitButtons","option","DateTimeInput","controls","dateSlotObj","onChangeLocal","changedField","changedValue","newTime","dateR","mm","setUTCHours","codeDateTime","StepInputButton","inputName","step","min","max","newValue","QuickInputBlock","quickAction","TimeValInput","valueAsNumber","BookingEditorBaseForm","formProps","SUBMIT_BUTTONS_TEXT","bookingEditorModal","tarifName","tarifId","toCancel","toMove","toChange","toNew","DEFAULT_BOOKING_VALS","timeVal","MAIN_WATCHED_FIELDS","BookingEditor","initialValues","watch","validate","fullnameImputActive","useFlyersDataUpd","watchedMainValues","watchedFields","changedValues","isChanged","handleWatch","GET_INITIAL_VALUES_LIGHTMODE","lightSet","BookingEditorLight","handleWatchLight","setBasepath","routes","Content","App","useRedirect","useRoutes","sidebarKey","setSidebarKey","childNode","previousElementSibling","findTR0node","hours","bookingEditor_UpdateTime","arrDataMap","dataMap","bookingRec","getBookingRec","callBookingEditorForId","res","err","activeSidebarObj","RESIZE_OPT","documentElement","setProperty","innerHeight","start","checkUser","renderApp","ReactDOM","render","setDate","setNewPeriod","addEventListener","stack","trace","onload"],"mappings":"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","file":"static/js/main.a05f06f3.chunk.js","sourcesContent":["export var _Date = {\r\n    m30: 1800000,\r\n    hr24: 86400000,\r\n    GMToffset: new Date().getTimezoneOffset() * 60000,\r\n    longLocaleStrOptions: { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' },\r\n\r\n    timeStrToMS: function (str) {\r\n        //'24.01.2019 08:00'\r\n        var timeArr = str.split(/[.:\\s]/);\r\n        var FTime_ms = timeArr.length > 2 ?\r\n            Date.UTC(\r\n                +timeArr[2],\r\n                +timeArr[1] - 1,\r\n                +timeArr[0],\r\n                +timeArr[3],\r\n                +timeArr[4])\r\n            :\r\n            (+timeArr[1] + timeArr[0] * 60) * 60000;\r\n        return FTime_ms;\r\n    },\r\n\r\n    dateMsToDateN: function (dateMs) {\r\n        let dateN = Math.trunc(dateMs / 86400000);\r\n        return dateN;\r\n    },\r\n\r\n    dateToYYYYMMDD: function (srcDate, delimeter) {\r\n        delimeter = delimeter || '';\r\n        var year = srcDate.getFullYear(), month = +srcDate.getMonth() + 1, day = +srcDate.getDate();\r\n        var resDate = year + delimeter\r\n            + (month > 9 ? month : ('0' + month)) + delimeter\r\n            + (day > 9 ? day : ('0' + day));\r\n        return resDate;\r\n    },\r\n\r\n    dateToLongStrRu: (date) => date.toLocaleDateString('ru-RU', _Date.longLocaleStrOptions),\r\n\r\n    dayNumToCustomDateObj: function (dayN) {\r\n        let date = new Date(dayN * _Date.hr24);\r\n        let dateObj = _Date.customDate(date);\r\n        return dateObj;\r\n    },\r\n\r\n    msToSlotN: function (msTime) {\r\n        let slotN = (msTime - _Date.dateMsToDateN(msTime) * _Date.hr24) / _Date.m30\r\n        return Math.trunc(slotN)\r\n    },\r\n\r\n    slotStrToMs: function (slotStr) {\r\n        let [hh, mm,] = slotStr.split(/:/);\r\n        let slotMs = (+mm + hh * 60) * 60000;\r\n        return slotMs;\r\n    },\r\n\r\n    msToCustomDateObj: function (msTime, toggleGMT) {\r\n        // var SSTime = (jsTime+3*60*60*1000)/1000/60/60/24+25569\r\n        if (toggleGMT === true) { msTime -= _Date.GMToffset; }\r\n        let date = new Date(msTime);\r\n        let dateObj = _Date.customDate(date);\r\n        return dateObj;\r\n    },\r\n\r\n    customDate: function (date) {\r\n        let timeMS = date.getTime();\r\n        let dateN = _Date.dateMsToDateN(timeMS);\r\n        let monthN = date.getUTCMonth();\r\n        let dayN = date.getUTCDate();\r\n        let timeStr = `${date.getUTCHours()}:${+date.getUTCMinutes() >= 30 ? '30' : '00'}`;\r\n        let dayWeekN = date.getUTCDay();\r\n        let HDay = _Date.isHoliday(monthN, dayN, dayWeekN);\r\n\r\n        let dayName = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\n        let dateObj = {\r\n            timeMS,\r\n            timeStr,\r\n            date,\r\n            dateN,\r\n            monthN: +monthN + 1,\r\n            dayN,\r\n            dayName: dayName[dayWeekN],\r\n            HDay\r\n        };\r\n        return dateObj;\r\n    },\r\n\r\n    isHoliday: function (monthN, dayN, dayWeekN) {\r\n        var holidays = [        //2023\r\n            [1,2,3,4,5,6,7,8],\r\n            [23,24],\r\n            [8],\r\n            [],\r\n            [1, 8, 9,],\r\n            [12],\r\n            [], [], [], [],\r\n            [6], [] //NOV//DEC\r\n        ];\r\n\r\n        return !!(\r\n            dayWeekN == 0\r\n            || dayWeekN == 6\r\n            || holidays[monthN].indexOf(dayN) != -1\r\n        );\r\n    } //end isHoliday\r\n}; // ===== END custom DATE OBJ ==========\r\n\r\nexport const TIME_SLOTS = Object.freeze(getTimeSlotsArr());\r\nfunction getTimeSlotsArr() {\r\n    let timeSlotsArr = [];\r\n    for (let i = 0; i <= 23; i++) {\r\n        timeSlotsArr.push(\r\n            [i * 2 * _Date.m30, i * 100 + 0, i + ':00'],\r\n            [i * 2 * _Date.m30 + _Date.m30, i * 100 + 30, i + ':30']\r\n        );\r\n    }\r\n    return (timeSlotsArr);\r\n}\r\n","\r\n// import {createStore}                                    from 'redux'\r\nimport { configureStore, createSlice, } from '@reduxjs/toolkit'\r\n\r\n\r\nexport const APP_CONSTANTS = {\r\n    bookingsAPIDataMap: {\r\n        bookingIdCI: 0,\r\n        history:     1,\r\n\r\n        timeCI:      2,\r\n        timeValCI:   3,\r\n        tarif:       4,\r\n        fullname:    5,\r\n        notes:       6,\r\n        status:      7,\r\n        flyerId:     8,\r\n        email:       9,\r\n        phone:      10,\r\n    },\r\n    bookingsViewPosArr: [\r\n        'timeCI',\r\n        'timeValCI',\r\n        'tarif',\r\n        'fullname',\r\n        'notes',\r\n        'bookingIdCI',\r\n        'status',\r\n        'email',\r\n        'phone',\r\n        'flyerId',\r\n        'history',\r\n    ],\r\n    bookingsArrMap: {\r\n        timeCI:     0,\r\n        timeValCI:  1,\r\n        tarif:      2,\r\n        fullname:   3,\r\n        notes:      4,\r\n        bookingIdCI:5,\r\n        status:     6,\r\n        email:      7,\r\n        phone:      8,\r\n\r\n        flyerId:    9,\r\n        history:   10,\r\n    },\r\n\r\n    flyersAPI_dataMap: {\r\n        fullname: 0,\r\n        flyerId: 2,\r\n        catid: 3,\r\n        firstname: 4,\r\n        secondname: 5,\r\n        lastname: 6,\r\n        email: 7,\r\n        phone: 8,\r\n        notes: 10,\r\n    },\r\n\r\n\r\n    BT_DATES_OFFSET: {\r\n        stOffset:   -1,\r\n        endOffset:   3\r\n    },\r\n\r\n    FT_DATES_OFFSET: {\r\n        stOffset:   -1,\r\n        endOffset:   30\r\n    },\r\n\r\n\r\n\r\n    BASE_PATH:          process.env.PUBLIC_URL,\r\n\r\n    DEFAULT_SOURCE:    'GAS_MASTER_BS_URL',\r\n    // DEFAULT_SOURCE:    'GAS_DEV_BS_URL',\r\n\r\n    GAS_DEV_BS_URL:    'https://script.google.com/macros/s/'\r\n                      +'AKfycbyBZQxJxDw6N47Gvi6ZbUKYJI8KfQxElHzz9GThw72cpx_JsDeJbdKoDNSvz_igTGge/exec',\r\n\r\n    GAS_MASTER_BS_URL: 'https://script.google.com/macros/s/'\r\n                      +'AKfycbzPmb05v6dC1lKDGSk7H5265KatlQbdLm8fWzGShh8zP0MdzR0t0ITJjVFuAuOW8D0-/exec',\r\n\r\n    shiftChangeAppUrl: 'https://nwpoul.github.io/ShiftChangeWEB/Index.html'\r\n}\r\n\r\nexport const APP_VARS = {\r\n    user: {\r\n        name: '',\r\n        mail: '',\r\n        ps:   '',\r\n        role: '',\r\n    },\r\n\r\n    bookingsData: {\r\n        arr:  [],\r\n        obj:  {},\r\n        reqs: {},\r\n        loading: false,\r\n        upd: 0,\r\n    },\r\n\r\n\r\n    flyersData: {\r\n        arr: [],\r\n        obj: {},\r\n        upd: 0,\r\n        new: '',\r\n        editorState: {},\r\n        showEditor: false,\r\n        showModal: '',\r\n    },\r\n\r\n    period: {\r\n        reqDate: '',\r\n        stDate:  '',\r\n        endDate: '',\r\n    },\r\n\r\n    event: '',\r\n\r\n    bookingsTable: {\r\n        tableDateN:    null,\r\n        curTbodyInfo: {\r\n            headerStr: 'not set yet',\r\n            dateN:     ''\r\n        },\r\n        testText:     'bookingsTable initial test text'\r\n    },\r\n\r\n    freetimeTable: {\r\n        minTime:       15,\r\n        tableDateN:    null,\r\n    },\r\n\r\n    sidebarState: {\r\n        isToggled: false,\r\n        curObj   : {},\r\n        showModal: '',\r\n        viewTime : null,\r\n    },\r\n\r\n\r\n    testState: {\r\n        testText: 'initial test text',\r\n        pending: false,\r\n        error: undefined,\r\n        data: undefined,\r\n    }\r\n}\r\n\r\nfunction logger({ getState }) {\r\n    return next => action => {\r\n        console.log('ACT: ', action.type, action.payload)\r\n        return next(action)\r\n    }\r\n}\r\n\r\n\r\nexport const mainStateSlice = createSlice({\r\n    name: 'mainState',\r\n\r\n    initialState: {\r\n        user:         APP_VARS.user,\r\n        period:       APP_VARS.period,\r\n        bookingsData: APP_VARS.bookingsData,\r\n        flyersData:   APP_VARS.flyersData,\r\n        event:        APP_VARS.event,\r\n    },\r\n\r\n    reducers: {\r\n        userDataUPD: (state, action) => {\r\n            Object.assign(state.user, action.payload)\r\n        },\r\n        periodUPD: (state, action) => {\r\n            state.period = action.payload\r\n        },\r\n        bookingsDataUPD: (state, action) => {\r\n            Object.assign(state.bookingsData, action.payload)\r\n        },\r\n        bookingsDayDataUPD: (state, action) => {\r\n            let {dayN, dayData} = action.payload\r\n            if (!dayData) {\r\n                delete state.bookingsData.obj[dayN]\r\n            } else {\r\n                state.bookingsData.obj[dayN] = dayData\r\n            }\r\n        },\r\n        bookingsLoadingUPD: (state, action) => {\r\n            state.bookingsData.loading = action.payload\r\n        },\r\n\r\n\r\n        toggleFlyerEditorMD: (state, action) => {\r\n            state.flyersData.showEditor = action.payload ?? !state.flyersData.showEditor\r\n        },\r\n        flyersDataUPD: (state, action) => {\r\n            state.flyersData.raw = action.payload\r\n        },\r\n        newFlyerDataUPD: (state, action) => {\r\n            state.flyersData.raw.push(action.payload)\r\n        },\r\n        flyerEditorStateUPD: (state, action) => {\r\n            state.flyersData.editorState = action.payload\r\n        },\r\n        flyerEditorModalUPD: (state, action) => {\r\n            state.flyersData.showModal = action.payload\r\n        },\r\n\r\n\r\n        EventUPD: (state, action) => {\r\n            state.event = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const bookingsTableState = createSlice({\r\n    name: 'bookingsTable',\r\n    initialState: APP_VARS.bookingsTable,\r\n\r\n    reducers: {\r\n        tbodyInViewUPD: (state, action) => {\r\n            state.curTbodyInfo = action.payload\r\n        },\r\n        bTableDateUPD: (state, action) => {\r\n            state.tableDateN = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const freetimeTableState = createSlice({\r\n    name: 'freetimeTable',\r\n    initialState: APP_VARS.freetimeTable,\r\n\r\n    reducers: {\r\n        minTimeUPD: (state, action) => {\r\n            state.minTime = action.payload\r\n        },\r\n        ftTableDateUPD: (state, action) => {\r\n            state.tableDateN = action.payload\r\n        },\r\n    },\r\n})\r\n\r\n\r\nexport const testState    = createSlice({\r\n    name: 'testState',\r\n    initialState: APP_VARS.testState,\r\n\r\n    reducers: {\r\n        testActionMD: (state, action) => {\r\n            state.testText = JSON.stringify(action.payload)\r\n        },\r\n        pendingUPD: (state, action) => { state.pending = action.payload },\r\n        errorUPD  : (state, action) => { state.error   = action.payload },\r\n        dataUPD   : (state, action) => { state.data    = action.payload },\r\n    }\r\n})\r\n\r\nexport const sidebarState = createSlice({\r\n    name: 'sidebar',\r\n    initialState: APP_VARS.sidebarState,\r\n\r\n    reducers: {\r\n        toggleSidebarMD: (state, action) => {\r\n            state.isToggled = action.payload ?? !state.isToggled\r\n        },\r\n        sidebar_curObjUPD: (state, action) => {\r\n            state.curObj = action.payload ?? {}\r\n        },\r\n        bookingEditorModalUPD: (state, action) => {\r\n            state.showModal = action.payload\r\n        },\r\n        sidebar_viewTimeUPD: (state, action) => {\r\n            state.viewTime = action.payload\r\n        },\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//ACIONS\r\nexport const {\r\n    userDataUPD,\r\n\r\n    periodUPD,\r\n\r\n    bookingsDataUPD,\r\n    bookingsDayDataUPD,\r\n    bookingsLoadingUPD,\r\n\r\n    flyersDataUPD,\r\n    newFlyerDataUPD,\r\n    flyerEditorStateUPD,\r\n    toggleFlyerEditorMD,\r\n    flyerEditorModalUPD,\r\n\r\n    EventUPD,\r\n} = mainStateSlice.actions\r\n\r\nexport const {\r\n    tbodyInViewUPD,\r\n    bTableDateUPD,\r\n} = bookingsTableState.actions\r\n\r\nexport const {\r\n    minTimeUPD,\r\n    ftTableDateUPD,\r\n} = freetimeTableState.actions\r\n\r\nexport const {\r\n    toggleSidebarMD,\r\n    sidebar_curObjUPD,\r\n    bookingEditorModalUPD,\r\n    sidebar_viewTimeUPD,\r\n} = sidebarState.actions\r\n\r\nexport const {\r\n    testActionMD,\r\n    pendingUPD,\r\n    errorUPD,\r\n    dataUPD, } = testState.actions\r\n\r\n\r\n\r\n\r\n\r\n//SELECTORS\r\nexport const SELECTORS = {\r\n    bookingsObj       : state     => state.mainState.bookingsData.obj,\r\n    bookingsDayObj    : dayN      => state => state.mainState.bookingsData.obj[dayN],\r\n    bookingsObjDateNs : dateNsArr => state => Object.fromEntries(\r\n        dateNsArr.map( dateN => [dateN, state.mainState.bookingsData.obj[dateN] ])\r\n    ),\r\n\r\n    bookingsUpd   : state => state.mainState.bookingsData.upd,\r\n    instrRequests : state => state.mainState.bookingsData.reqs,\r\n\r\n    flyersData    : state => state.mainState.flyersData,\r\n        flyersData_showEditor  : state => state.mainState.flyersData.showEditor,\r\n        flyersData_showModal   : state => state.mainState.flyersData.showModal,\r\n        flyersDataRaw          : state => state.mainState.flyersData.raw,\r\n        flyersData_newName     : state => state.mainState.flyersData.newName,\r\n        flyersData_editorState : state => state.mainState.flyersData.editorState,\r\n\r\n\r\n    userObj     : (state) => state.mainState.user,\r\n    period      : (state) => state.mainState.period,\r\n    event       : (state) => state.mainState.event,\r\n\r\n    curTbodyInfo : (state) => state.bookingsTable.curTbodyInfo,\r\n    bTableDateN  : (state) => state.bookingsTable.tableDateN,\r\n\r\n    ftTableDateN : (state) => state.freetimeTable.tableDateN,\r\n    minTime      : (state) => state.freetimeTable.minTime,\r\n\r\n    sidebar   : (state) => state.sidebar,\r\n        sidebar_isToggled: (state) => state.sidebar.isToggled,\r\n        sidebar_curObj:    (state) => state.sidebar.curObj,\r\n        sidebar_InitData:  (state) => state.sidebar.curObj.type == 'INIT'\r\n                                      ? state.sidebar.curObj : null,\r\n        booking_showModal: (state) => state.sidebar.showModal,\r\n        sidebar_viewTime:  (state) => state.sidebar.viewTime,\r\n\r\n\r\n    testText       : (state) => state.testState.testText,\r\n    testFetchState : (state) => state.testState,\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        mainState:     mainStateSlice.reducer,\r\n        bookingsTable: bookingsTableState.reducer,\r\n        freetimeTable: freetimeTableState.reducer,\r\n        sidebar:       sidebarState.reducer,\r\n        testState:     testState.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        immutableCheck:    { warnAfter: 600 },\r\n        serializableCheck: { warnAfter: 600 },\r\n    }).concat(logger),\r\n})\r\n\r\n\r\n\r\nexport function tbInViewUpd_ThunkCreator(newTbodyInfo) {\r\n    return (dispatch, getState) => {\r\n        const {stOffset, endOffset} = APP_CONSTANTS.BT_DATES_OFFSET\r\n\r\n        const curTableDateN     = SELECTORS.bTableDateN( getState() )\r\n        const curViewDateN      = SELECTORS.curTbodyInfo( getState() ).dateN\r\n        const newViewDateN      = newTbodyInfo.dateN\r\n\r\n        let newTableDateN =\r\n            ( newViewDateN == +curTableDateN + stOffset &&\r\n              newViewDateN == curViewDateN - 1 )\r\n\r\n          ?  +curTableDateN + stOffset\r\n\r\n          : ( newViewDateN == +curTableDateN + endOffset &&\r\n              newViewDateN == +curViewDateN +1 ) ?\r\n                +curTableDateN + endOffset\r\n\r\n          : null\r\n\r\n        console.log(`THUNK: ViewDate: ${curViewDateN || 'n/a'} -> ${newViewDateN} tableDate: ${curTableDateN} -> ${newTableDateN}`)\r\n\r\n        if (newTableDateN) {\r\n            dispatch( bTableDateUPD(newTableDateN))\r\n        } else {\r\n            dispatch( tbodyInViewUPD(newTbodyInfo))\r\n        }\r\n    }\r\n}","\r\nimport {\r\n    setButtonText,\r\n}                               from 'JS/index.js'\r\n\r\nimport {\r\n    store,\r\n    userDataUPD,\r\n    SELECTORS,\r\n}                               from 'JS/store.js'\r\n\r\n\r\n\r\nfunction setUser() {\r\n  if (localStorage.getItem('name') &&\r\n      localStorage.getItem('role')) {\r\n\r\n    let user = {\r\n        name     : localStorage.getItem('name'),\r\n        ps       : localStorage.getItem('ps'),\r\n        role     : localStorage.getItem('role'),\r\n    }\r\n    setButtonText('loginButton', user.name.slice(0, 6))\r\n  }\r\n  return\r\n}\r\n\r\nfunction getUser() {\r\n    return SELECTORS.userObj( store.getState() )\r\n}\r\n\r\n// function logIn() {\r\n//     //debugger\r\n//      console.log('OLDLOGIN')\r\n// }\r\n\r\nfunction logOut() {\r\n//   localStorage.removeItem('name')\r\n//   localStorage.removeItem('ps')\r\n//   localStorage.removeItem('role')\r\n//   localStorage.removeItem('mail')\r\n    localStorage.clear();\r\n\r\n    store.dispatch( userDataUPD( {name: '', ps: '', role:'', mail:''} ) )\r\n}\r\n// eslint-disable-next-line no-unused-vars\r\n\r\n\r\n\r\n\r\nexport {\r\n    getUser,\r\n    setUser,\r\n    // logIn,\r\n    logOut,\r\n}","export { _Date,\r\n         TIME_SLOTS, }   from './_Date'\r\n\r\nexport { fetchAPI, }     from './fetchAPI'\r\n\r\n\r\n\r\n\r\n\r\n// SIMPLE SMALL UNGROUPED HELPERS HOSTED RIGHT HERE\r\n///////////////////////////////////////////////////\r\n\r\nexport function setButtonText(buttonId, text) {\r\n    if (!text || !buttonId) return\r\n    let button = document.getElementById(buttonId)\r\n    button.innerText = text\r\n}\r\n\r\n","const DEFAULT_FETCH_OPT = {\r\n        'method' : 'GET',\r\n        'headers': { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        // 'body'   : new URLSearchParams(),\r\n    }\r\n\r\nfunction checkStatus(response) {\r\n    if (!response.ok) {\r\n        return Promise.reject(new Error(response.statusText))\r\n    }\r\n    return Promise.resolve(response)\r\n}\r\n\r\nfunction retJSON(response) {\r\n    const parsedData = response.json()\r\n    return parsedData\r\n}\r\n\r\nfunction proceedJSON(parsedData) {\r\n    let servText = parsedData?.content?.slice?.(0, 5)\r\n                 ||JSON.stringify( parsedData ).slice(0, 70)\r\n    console.log(`JSON fetched: ${servText} ...`)\r\n    return parsedData\r\n}\r\n\r\nfunction errorHandling(error, setError) {\r\n    console.log(\"fetch err: \", error)\r\n    setError(error)\r\n    return error\r\n}\r\n\r\n\r\nfunction prepareFetchOptions(sourceUrl, reqObj = {}) {\r\n    let url = sourceUrl\r\n    let { params, options = DEFAULT_FETCH_OPT } = reqObj\r\n\r\n    if (options.method === 'POST') {\r\n        for (const parameter in params) {\r\n            options.body.append(\r\n                parameter,\r\n                encodeURIComponent(params[parameter]) // may be POST request dont need it!\r\n            )\r\n        }\r\n    } else if (params) {\r\n        url += '?'\r\n        for (const parameter in params) {\r\n            url += `&${parameter}=${encodeURIComponent(params[parameter])}`\r\n        }\r\n    }\r\n    return [url, options]\r\n}\r\n\r\n\r\n\r\nexport async function fetchAPI(sourceUrl, reqObj) {\r\n    let [url, options] = prepareFetchOptions(sourceUrl, reqObj)\r\n    return fetch(url, options)\r\n        .then(checkStatus)\r\n        .then(retJSON)\r\n        .then(proceedJSON)\r\n        .catch(errorHandling)\r\n}\r\n\r\n\r\nexport async function fetchAPI_store(sourceUrl, reqObj, storeProps) {\r\n    let [url, options] = prepareFetchOptions(sourceUrl, reqObj)\r\n    const { dispatch, pendingUPD, errorUPD, dataUPD, } = storeProps\r\n\r\n    const setPending   = (toggle) => {dispatch( pendingUPD(toggle) )}\r\n    const setError     = (error)  => {dispatch( errorUPD(error) )}\r\n    const setData      = (data)   => {dispatch( dataUPD(data) )}\r\n\r\n    setPending(true)\r\n    setError(undefined)\r\n    setData(undefined)\r\n\r\n    fetch(url, options)\r\n        .then(checkStatus)\r\n        .then(retJSON)\r\n        .then(proceedJSON)\r\n        .then(setData)\r\n\r\n        .catch( error => errorHandling(error, setError) )\r\n\r\n        .finally( () => setPending(false) )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// function proceedProxyText(responseJson) {\r\n//     let respObj  = JSON.parse(responseJson)\r\n//         respObj  = respObj.contents\r\n//     responseJson = JSON.stringify(respObj)\r\n//                        .replace(/\\\\n/g, '\\n')\r\n//     // console.dir(`Json replaced: ${responseJson.slice(0,400)}`)\r\n//     return responseJson\r\n// }","\r\nimport {\r\n    _Date,\r\n    TIME_SLOTS\r\n} from \"JS/_Date\"\r\n\r\nimport {\r\n    APP_CONSTANTS,\r\n}                   from 'index'\r\n\r\n\r\n\r\n// import {\r\n//     getTestData\r\n// } from 'testing.mjs';\r\n\r\n//TABLE VARS\r\n\r\n\r\n\r\nfunction parseTarif(tarifStr) {\r\n    let resStr\r\n    if (     /Серт/i.test(tarifStr) ) return 'ПР Серт.'\r\n    if ( /1\\.5 мин/i.test(tarifStr) ) return 'ПР доп. 1.5'\r\n\r\n    if ( /Спорт/i.test(tarifStr) ) {\r\n        resStr = `Спорт ${/\\d+.*\\d+/.exec(tarifStr)}`\r\n        if (  /ночн/.test(tarifStr) ) return resStr += ' Н'\r\n        if ( /прайм/.test(tarifStr) ) return resStr += ' PR'\r\n        if (  /Борз/.test(tarifStr) ) return resStr =  ' БЛЮкэмп'\r\n\r\n        return resStr\r\n    }\r\n\r\n    if ( /Pro /i.test(tarifStr) ) {\r\n        resStr = 'Sport ' + /\\d+/.exec(tarifStr)\r\n        if ( /night/.test(tarifStr) ) return resStr += ' N'\r\n        if (  /peak/.test(tarifStr) ) return resStr += ' PR'\r\n\r\n        return resStr\r\n    }\r\n\r\n    if ( /^\\d+ мин/.test(tarifStr) ) return 'ПР '\r\n    if ( /-\\s*20%$/i.test(tarifStr)) return 'ПР -20%'\r\n    if ( /благотв/i.test(tarifStr) ) return 'Бл-ть'\r\n\r\n    return tarifStr.substr(0, 15)\r\n}\r\n\r\nexport function proceedSourceBookingsArr(bookingsArr) {\r\n    const API_Map       = APP_CONSTANTS.bookingsAPIDataMap\r\n    const VIEW_Map      = APP_CONSTANTS.bookingsViewPosArr\r\n    const ViewTimeCI    = VIEW_Map.indexOf('timeCI')\r\n\r\n    let instrRequests   = {}\r\n    let resultArr = bookingsArr.map(\r\n        APIDataRec => {\r\n            let curRecSlice = APIDataRec.slice()\r\n            curRecSlice[API_Map.timeCI] = Date.parse(curRecSlice[API_Map.timeCI]) - _Date.GMToffset\r\n            if (curRecSlice[API_Map.status] === 'Запрос') {\r\n                instrRequests[ curRecSlice[API_Map.bookingIdCI] ] = parseReqObj(curRecSlice, API_Map)\r\n            }\r\n            return VIEW_Map.map( field => curRecSlice[ API_Map[field] ] )\r\n        }\r\n    ).sort( (a, b) => a[ViewTimeCI] - b[ViewTimeCI] )\r\n\r\n\r\n    return [resultArr, instrRequests]\r\n}\r\n//sub Function\r\nfunction parseReqObj(APIDataRec, API_Map) {\r\n    let {time, user} = JSON.parse( APIDataRec[API_Map.history] )[0]\r\n    return {\r\n        id         : APIDataRec[API_Map.bookingIdCI],\r\n        timeFlight : APIDataRec[API_Map.timeCI],\r\n        reqTime    : time,\r\n        user,\r\n    }\r\n}//sub Function\r\n\r\n\r\n\r\nexport function bookingsDataToObj(bookingsData) {\r\n    const {timeCI, timeValCI} = APP_CONSTANTS.bookingsArrMap\r\n    const apiSubRecStCI       = timeValCI\r\n    const veiwSubRecStCI      = timeValCI + 1\r\n    const [ bookingsArr,\r\n            instrRequests ]   = proceedSourceBookingsArr(bookingsData)\r\n\r\n    const colCnt       = bookingsArr[0].length\r\n    const subRecColCnt = colCnt - apiSubRecStCI\r\n    const subRecTmp    = new Array(subRecColCnt).fill('')\r\n\r\n    const stDateN      =_Date.dateMsToDateN( bookingsArr[0][timeCI] )\r\n    const endDateN     =_Date.dateMsToDateN( bookingsArr[bookingsArr.length-1][timeCI] )+1\r\n\r\n    const RES_BOOKING_DATA = {}\r\n    let RES_B_OBJ          = initResObj(stDateN, endDateN)\r\n\r\n    for (var i = 0; bookingsArr[i+1]; i++) {\r\n        var curTime    = bookingsArr[i][timeCI]\r\n        var curTimeVal = bookingsArr[i][timeValCI]\r\n\r\n        var [curDateN,\r\n             curTimeN,\r\n             curTimeIndex]            = parseCurTime(curTime)\r\n\r\n        var timeAccum                 = curTimeVal\r\n        var curResRec                 = makeResRec(curTimeN, timeAccum)\r\n            curResRec[veiwSubRecStCI] = [ bookingsArr[i].slice(apiSubRecStCI) ]\r\n\r\n\r\n        // 1 GROUP same TIMESLOTS\r\n        groupTimeSlots(curResRec) //adj {i. timeAccum, curResRec}\r\n\r\n        RES_B_OBJ[curDateN][curTimeIndex] = curResRec\r\n\r\n        // 2 SPREADING EXCEEDED TIME on next slots\r\n        spreadOverTime(RES_B_OBJ)\r\n    }//END for bookings rec\r\n\r\n    //delete last/incomplete dayObjs\r\n    delete RES_B_OBJ[endDateN]\r\n    if (curDateN > stDateN) {\r\n        delete RES_B_OBJ[curDateN]\r\n    } else console.log('last date with data = st.date, the last date obj incomplete!')\r\n\r\n    RES_BOOKING_DATA.arr   = bookingsArr\r\n    RES_BOOKING_DATA.obj   = RES_B_OBJ\r\n    RES_BOOKING_DATA.reqs  = instrRequests\r\n    return RES_BOOKING_DATA\r\n\r\n\r\n\r\n        //SUB Function\r\n        function groupTimeSlots() {\r\n            while ( bookingsArr[i+1]?.[timeCI] == curTime) {\r\n                timeAccum += bookingsArr[i+1][timeValCI]\r\n                curResRec[veiwSubRecStCI].push(bookingsArr[i+1].slice(apiSubRecStCI))\r\n                i++\r\n            }\r\n            curResRec[timeValCI] = timeAccum\r\n        }\r\n\r\n        //SUB Function\r\n        function spreadOverTime() {\r\n            while (timeAccum > 30) {\r\n                curResRec[timeValCI] = 30\r\n                timeAccum           -= 30\r\n                curTime             += _Date.m30;\r\n                [curDateN,\r\n                 curTimeN,\r\n                 curTimeIndex]       = parseCurTime(curTime)\r\n\r\n                curResRec            = makeResRec(curTimeN, timeAccum)\r\n                curResRec[veiwSubRecStCI][0][1] = '-----'\r\n\r\n                groupTimeSlots()\r\n                RES_B_OBJ[curDateN][curTimeIndex] = curResRec\r\n            }\r\n            timeAccum = 0\r\n        }//END SUB spreadovertime\r\n\r\n        function makeResRec(curTime, timeAccum = 0) {\r\n            let curResRec                 = []\r\n                curResRec[timeCI]         = curTime\r\n                curResRec[timeValCI]      = timeAccum\r\n                curResRec[veiwSubRecStCI] = [subRecTmp.slice()]\r\n            return curResRec\r\n        }\r\n\r\n        //SUB Function\r\n        function initResObj(stDateN, endDateN) {\r\n            var  resObj = {}\r\n            for (let dateN = stDateN; dateN <= endDateN; dateN++) {\r\n                resObj[dateN] = {}\r\n                TIME_SLOTS.forEach(slot => {\r\n                    resObj[dateN][slot[0]/_Date.m30] = makeResRec(slot[0], 0)\r\n                })\r\n            }\r\n            return resObj\r\n        }\r\n\r\n        //SUB Function\r\n        function parseCurTime(curTime) {\r\n            let curDateN         = _Date.dateMsToDateN( curTime )\r\n            let curTimeN         = curTime - curDateN * _Date.hr24\r\n            let curTimeIndex     = curTimeN / _Date.m30\r\n            return [curDateN, curTimeN, curTimeIndex]\r\n        }\r\n}","\r\nimport { _Date }              from 'JS/_Date'\r\nimport { fetchAPI,\r\n         fetchAPI_store, }    from 'JS/fetchAPI'\r\n\r\nimport { asyncGetTestData, }  from 'JS/testing.js'\r\n\r\nimport { APP_CONSTANTS,\r\n         SELECTORS,\r\n         getUser,\r\n         store,\r\n         bookingsDataUPD,\r\n         flyersDataUPD,\r\n         bookingsDataToObj, } from 'index'\r\n\r\nconst DEFAULT_SOURCE = APP_CONSTANTS.DEFAULT_SOURCE\r\n\r\n//TEST_MODE //TEST_MODE //TEST_MODE\r\nconst TEST_MODE = 0\r\n//TEST_MODE //TEST_MODE //TEST_MODE\r\n\r\n\r\nconst _defValidation = (fetchResult) =>\r\n    !!( fetchResult.status == 200\r\n     && fetchResult.content )\r\n\r\nconst _defValidationErrorHandler = (command, responseObj, responseData) => {\r\n    responseObj.status = 'ERROR: ' + responseData?.status\r\n    try {\r\n        responseObj.data = JSON.parse(responseData)\r\n    } catch (error) {\r\n        responseObj.data = responseData\r\n    }\r\n    console.warn(`API_${command} answer is INVALID!`, responseObj)\r\n    return responseObj\r\n}\r\n\r\nconst _defModification = (responseData) => responseData.content\r\n\r\n\r\nasync function API_REQUEST({ command,\r\n                             requestObj   = {},\r\n                             source       = DEFAULT_SOURCE,\r\n                             validation   = _defValidation,\r\n                             modification = _defModification, }) {\r\n\r\n    console.log(`API_${command}`, requestObj)\r\n    const responseObj = {status: 'LOADING', data: null}\r\n\r\n    const USER   = getUser()\r\n\r\n    let url, params, options\r\n\r\n    switch (source) {\r\n        case 'GAS_DEV_BS_URL':\r\n        case 'GAS_MASTER_BS_URL':\r\n            url     = APP_CONSTANTS[source]\r\n            params  = {\r\n                id: {\r\n                    nick: USER.name,\r\n                    mail: USER.mail,\r\n                    ps: USER.ps,\r\n                },\r\n                command,\r\n                data: requestObj\r\n            }\r\n\r\n            params.id   = JSON.stringify(params.id)\r\n            params.data = JSON.stringify(params.data)\r\n            options     = {'method': 'GET'}\r\n          break\r\n    }\r\n\r\n    let responseData   = await fetchAPI(url, {params, options})\r\n    if ( !validation(responseData) ) return _defValidationErrorHandler(command, responseObj, responseData)\r\n\r\n    responseObj.status = 'OK'\r\n    responseObj.data   = modification(responseData)\r\n\r\n    return responseObj\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport async function REQ_GETBOOKINGS({ stDate, endDate, days=5,\r\n                                        validation, modification, source}) {\r\n\r\n    stDate   = new Date(stDate)\r\n    endDate  = new Date(endDate)\r\n\r\n    if ( isNaN(stDate) )   stDate = new Date()\r\n    if ( isNaN(endDate) ) {\r\n        endDate = new Date(stDate)\r\n        endDate.setHours( (days-1)*24, 0, 0, 0)\r\n    }\r\n\r\n    let noLS        = true //false\r\n\r\n    let requestObj  = {stDate, endDate}\r\n    let command     = 'rasp'\r\n\r\n\r\n\r\n    //TEST_MODE //TEST_MODE //TEST_MODE\r\n    if (TEST_MODE) {\r\n        let lsData = API_GET_LSBOOKINGS()\r\n        if (lsData) return\r\n        noLS          = false\r\n        // requestObj  = {amount: 200}\r\n        // command     = 'GET_XLAST_BOOKINGS'\r\n    }\r\n    //TEST_MODE //TEST_MODE //TEST_MODE\r\n\r\n    const responseObj = await API_REQUEST({requestObj, command, validation, modification, source})\r\n\r\n    if (responseObj.status === 'OK') {\r\n        let bookingsData = responseObj.data;\r\n        let bookingsObj  = bookingsDataToObj(bookingsData)\r\n        return saveBookings(bookingsObj, noLS)\r\n    }\r\n    console.log( 'ERROR IN REQ_GETBOOKINGS!')\r\n    return null\r\n}//end getBkngD\r\n\r\n\r\nexport async function getLastUpdate({validation, modification, source=DEFAULT_SOURCE, subject='bookings'}) {\r\n    const COMMANDS = { bookings : 'GET_LAST_BOOKINGSUPD',\r\n                       flyers   : 'GET_LAST_FLYERSUPD', }\r\n    const command  = COMMANDS[subject]\r\n    return await API_REQUEST({command, validation, modification, source})\r\n}\r\n\r\n\r\n\r\n\r\nexport function saveBookings(bookingsDataObj, noLS = true) {\r\n    if (!noLS) {\r\n        window.localStorage.setItem('bookingsData', JSON.stringify(bookingsDataObj));\r\n    }\r\n    store.dispatch(bookingsDataUPD(bookingsDataObj))\r\n}\r\n\r\n\r\nexport async function loadFlyersData() {\r\n    let noLS       = true //false\r\n    const command  = 'getFlyers'\r\n    let flyersData = await API_REQUEST({command})\r\n\r\n    if (flyersData.status === 'OK') {\r\n        flyersData = flyersData.data;\r\n        return saveFlyersData(flyersData, noLS)\r\n    }\r\n}\r\n\r\nexport function saveFlyersData(flyersData, noLS = true) {\r\n    if (!noLS) {\r\n        window.localStorage.setItem('flyersData', JSON.stringify(flyersData))\r\n    }\r\n    store.dispatch(flyersDataUPD(flyersData))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function API_CANCEL_BOOKING({bookingId}) {\r\n    const requestObj = {bookingId}\r\n    const command    = 'cancelBooking'\r\n\r\n    return await API_REQUEST({requestObj, command})\r\n}\r\n\r\n\r\nexport async function API_CHANGE_BOOKING(bookingObj) {\r\n    const command    = 'changeBooking'\r\n\r\n    return await API_REQUEST({requestObj: bookingObj, command})\r\n}\r\n\r\nexport async function API_ADD_BOOKING(bookingObj) {\r\n    const instrMode  = !!bookingObj.instrMode\r\n    const command    = instrMode ? 'addBooking_instrMode' : 'addBooking'\r\n\r\n    return await API_REQUEST({requestObj: bookingObj, command})\r\n}\r\n\r\n\r\nexport async function API_ADD_FLYER(flyerObj) {\r\n    const command = 'addFlyer'\r\n    return await API_REQUEST({requestObj: flyerObj, command})\r\n}\r\n\r\n\r\nexport async function HANDLE_API_BOOKING_RESPONSE(responseObj) {\r\n    let noLS         = true\r\n    let bookingsObj  = {}\r\n    let bookingsData = responseObj\r\n\r\n\r\n    if (bookingsData.status === 'OK') {\r\n        bookingsData = bookingsData.data;\r\n        bookingsObj  = bookingsDataToObj(bookingsData)\r\n        // return saveBookings(bookingsData, bookingsObj, noLS);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////   additional functional module /////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport function callRaspPage(e) {\r\n    const { user, ps}   = getUser()\r\n    let targetDay = e.srcElement.dataset.day\r\n    let url       = APP_CONSTANTS.bookingsTimetableUrl\r\n    let params    = {\r\n        'wtime':    targetDay,\r\n        'login':    user,\r\n        'password': ps\r\n    }\r\n\r\n    let qString   = ''\r\n    for (let param in params){\r\n        qString  += `&${param}=${params[param]}`\r\n    }\r\n    let reqString = url + qString\r\n    window.open(reqString)\r\n}\r\n\r\n\r\nexport function API_GET_LSBOOKINGS() {\r\n    let lsBookingsData = window.localStorage.getItem('bookingsData')\r\n    if (lsBookingsData) {\r\n        let lsBookingsObj = JSON.parse(lsBookingsData)\r\n        //debugger\r\n         console.log(lsBookingsObj)\r\n         return !!store.dispatch(bookingsDataUPD(lsBookingsObj))\r\n    }\r\n    return false\r\n}","import { useEffect } from 'react'\r\n\r\nlet subscribers = []\r\n\r\nconst subscribe = (filter, callback) => {\r\n  if (filter   === undefined || filter   === null) return undefined\r\n  if (callback === undefined || callback === null) return undefined\r\n\r\n  subscribers = [\r\n    ...subscribers,\r\n    [filter, callback],\r\n  ]\r\n\r\n  return () => {\r\n    subscribers = subscribers.filter((subscriber) => subscriber[1] !== callback)\r\n  }\r\n}\r\n\r\nexport const evDispatch = (event) => {\r\n    //  debugger\r\n    //  console.dir(subscribers)//\r\n\r\n    const args   = []\r\n    let { type } = event\r\n    if (typeof event === 'string') {\r\n        type = event\r\n        args.push({ type })\r\n    } else {\r\n        args.push(event)\r\n    }\r\n    //debugger\r\n    console.dir(`EVNT: ${type}`)//\r\n    // console.trace('ct: ' + event )//\r\n\r\n    subscribers.forEach(([filter, callback]) => {\r\n    if (typeof filter === 'string'   &&  filter !== type) return\r\n    if (typeof filter === 'function' && !filter(...args)) return\r\n\r\n    callback(...args)\r\n  })\r\n}\r\n\r\nexport const useBus = (type, callback, deps = []) => {\r\n    useEffect(() => subscribe(type, callback), deps)//eslint-disable-line react-hooks/exhaustive-deps\r\n    return evDispatch\r\n}\r\n\r\nexport default useBus","\r\n\r\nimport { memo } from 'react'\r\nimport {\r\n    useSelector,\r\n    useDispatch,\r\n}                               from 'react-redux'\r\n\r\nimport {\r\n    APP_CONSTANTS,\r\n    SELECTORS,\r\n    EventUPD,\r\n}                               from '../../index'\r\n\r\n\r\nimport { useBus,\r\n         evDispatch, }          from 'Hooks'\r\n\r\n//debugger\r\n console.log(process.env)\r\n\r\n\r\nconst BASE_PATH = process.env.NODE_ENV === 'production'\r\n                ? process.env.PUBLIC_URL\r\n                : ''\r\n\r\nconst SHIFTCHANGE_APP_URL = APP_CONSTANTS.shiftChangeAppUrl\r\n\r\n\r\nconst Spacer = () => <span style={{width: '2em'}}></span>\r\n\r\n\r\nconst ShiftsButton = () => {\r\n    return(\r\n        <button\r\n            id        = \"shiftsButton\"\r\n            className = \"navButton\"\r\n            onClick   = { () => window.open(SHIFTCHANGE_APP_URL) }\r\n        >\r\n            <b>Shifts</b>\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst NavButton   = ({command, mode}) => {\r\n    const clickHandler = () => {\r\n        evDispatch({\r\n            type: '@@ui/NAV_BTN_CLICK',\r\n            payload: command\r\n        })\r\n    }\r\n    const btnText  = {\r\n        prev: <b>&laquo;</b>,\r\n        next: <b>&raquo;</b>,\r\n    }\r\n\r\n    return(\r\n        <button\r\n            id        = { command + \"Button\" }\r\n            className = \"navButton\"\r\n            onClick   = { clickHandler }\r\n        >\r\n            { btnText[command] }\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst BottomBar = () => {\r\n\r\n    return (\r\n        <div id = \"bottomBar\" className=\"bottomBar\">\r\n            <ShiftsButton />\r\n                <Spacer />\r\n            <NavButton command=\"prev\" mode={'...'}/>\r\n                <Spacer />\r\n            <NavButton command=\"next\" mode={'...'}/>\r\n                <Spacer />\r\n            <TEST_BTN/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(BottomBar)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TEST_INFO() {\r\n    let testText = useSelector( SELECTORS.testText )\r\n    return (\r\n        <div className=\"testDiv\">\r\n            {testText}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TEST_BTN() {\r\n    if ( !APP_CONSTANTS.DEFAULT_SOURCE.includes('DEV') ) return null\r\n    const clickHandler = () => {\r\n        evDispatch('@@ui/TEST_BTN4')\r\n    }\r\n\r\n\r\n    return(\r\n        <button\r\n            id        = \"testButton\"\r\n            className = \"navButton\"\r\n            onClick   = { clickHandler }\r\n            style     = { {backgroundColor: \"red\", color: \"white\"} }\r\n        >\r\n            TEST/DEV\r\n        </button>\r\n    )\r\n}","import { useSelector,\r\n         useDispatch,\r\n         shallowEqual,}            from 'react-redux'\r\n\r\nimport { useBus,\r\n         evDispatch, }             from 'Hooks'\r\n\r\n\r\nimport { _Date } from \"JS/_Date\"\r\n\r\n\r\nimport { store,\r\n         SELECTORS, }              from 'JS/store.js'\r\n\r\n\r\n\r\nexport function InstrReqTab() {\r\n    const USER          = useSelector(SELECTORS.userObj)\r\n    const ADMIN_TOGGLE  = USER?.role === 'admin'\r\n    const instrRequests = useSelector(SELECTORS.instrRequests)\r\n    if (!instrRequests || Object.keys(instrRequests).length === 0) {return null}\r\n\r\n    const requests = []\r\n    Object.values(instrRequests).forEach(\r\n        (reqValue) => {\r\n            let { id, timeFlight, user, reqTime, } = reqValue\r\n\r\n            if (ADMIN_TOGGLE || user === USER?.name) {\r\n                reqTime = `${reqTime.slice(0,5).replace('.', '/')}  ${reqTime.slice(12,17)}`\r\n                requests.push(\r\n                    <option\r\n                        key   = {id}\r\n                        value = {JSON.stringify({id, timeFlight})}\r\n                    >\r\n                        { `${user} ${reqTime}:   ID:${id}` }\r\n                    </option>\r\n                )\r\n            }\r\n        }\r\n    )\r\n    if (!requests.length) { return null }\r\n\r\n    const placeholder = <option\r\n                            key   = \"placeholder\"\r\n                            value = {requests[0]?.props?.value}\r\n                        >\r\n                                Запросов: {requests.length}\r\n                        </option>\r\n\r\n    const onChange = (e) => {\r\n        const {id, timeFlight} = JSON.parse(e?.target?.value)\r\n        console.log(id, new Date(timeFlight).toLocaleString())\r\n        evDispatch({type: '@@ui/EDIT_BOOKING_CALL', payload: id})\r\n    }\r\n\r\n    return (\r\n        <select\r\n            id       = \"instrRequests\"\r\n            onChange = {onChange}\r\n        >\r\n            {placeholder}\r\n            {requests}\r\n        </select>\r\n    )\r\n}","\r\nimport { navigate}    from 'hookrouter'\r\n\r\nimport { useSelector,\r\n         useDispatch,}          from 'react-redux'\r\n\r\nimport { testActionMD,\r\n         minTimeUPD,\r\n         SELECTORS,}            from 'JS/store.js'\r\n\r\nimport { _Date } from \"JS/_Date\"\r\nimport { getPeriod,\r\n         logOut,\r\n         updateBookings,}       from '../../index'\r\n\r\nimport { InstrReqTab }          from './InstrReqTab'\r\n\r\n\r\n\r\nimport { useBus,\r\n         evDispatch, }          from 'Hooks'\r\n\r\n\r\nconst modeMap = {\r\n    'bookings': {href: './freetime', HMBtn: <HomeButton />},\r\n    'freetime': {href: './bookings', HMBtn: <MinTimeButton />},\r\n    'default' : {href: './bookings', HMBtn: <HomeButton />}\r\n}\r\n\r\nconst Spacer = () => <span style={{width: '1em'}}></span>\r\n\r\nconst dateImageOptions = {\r\n    locale: 'ru',\r\n    localeOptions: {day: '2-digit', month: '2-digit', year: '2-digit'}\r\n}\r\n\r\n\r\nconst setReqDate = (e) => {\r\n    let newReqDate = new Date(e.target?.value || e)\r\n    getPeriod(newReqDate)\r\n}\r\nfunction ReqDateButton() {\r\n    let reqDateStr = useSelector( SELECTORS.period )?.reqDate\r\n    let reqDate    = new Date(reqDateStr)\r\n\r\n    const imageReqDateString = reqDate.toLocaleString(dateImageOptions.locale, dateImageOptions.localeOptions)\r\n\r\n\r\n    return (\r\n        <button id=\"reqDateButton\" className=\"reqDateButton\">\r\n            { imageReqDateString || '...' }\r\n            <input\r\n                type     = \"date\"\r\n                id       = \"reqDateInput\"\r\n                onChange = {setReqDate}\r\n                name     = \"reqDate\"\r\n            />\r\n        </button>\r\n)}\r\n\r\n\r\nfunction ReloadButton() {\r\n\r\n    // useBus(\r\n    //     '@@ui/NEXT_NAV_BTN_CLICK',\r\n    //     () => console.dir('ReloadButton NEXT_NAV_BTN_CLICK detected')\r\n    // )\r\n\r\n    return(\r\n        <button id=\"reloadButton\"\r\n            onClick={ updateBookings }\r\n        >\r\n            <b>&#08635;</b>\r\n        </button>\r\n)}\r\n\r\nfunction LoginButton() {\r\n    const dispatch   = useDispatch()\r\n    const USER       = useSelector(SELECTORS.userObj)\r\n\r\n    function loginButtonClick(e) {\r\n        if ( e.target.innerText === 'Log in') {return}\r\n        if ( window.confirm('выйти?') ) {\r\n            dispatch( testActionMD( 'logOut()' ) )\r\n            logOut()\r\n        }\r\n    }\r\n\r\n    return(\r\n        <button id=\"loginButton\"\r\n            onClick={(e) => loginButtonClick(e)}\r\n        >\r\n            {USER?.name?.slice(0, 6) || 'Log in'}\r\n        </button>\r\n)}\r\n\r\n\r\n\r\n\r\nfunction HomeButton() {\r\n    const homeButtonClick = () =>{\r\n        evDispatch('@@ui/HOME_BTN_click')\r\n    }\r\n\r\n    return (\r\n        <button id=\"homeButton\"\r\n            onClick    ={ homeButtonClick }\r\n        >\r\n            <b>⌂</b>\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction MinTimeButton () {\r\n    const dispatch  = useDispatch()\r\n    let minTime     = useSelector( SELECTORS.minTime )\r\n    function setNewMintime() {\r\n        let minTime = prompt('Looking for ... (min)', 15)\r\n        dispatch( minTimeUPD( minTime ) )\r\n    }\r\n\r\n    return(\r\n        <button id=\"setMintimeButton\"\r\n            onClick={ setNewMintime }\r\n        >\r\n            {minTime + '\\'' || '...'}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction ModeButtonRTD({href}) {\r\n    return(\r\n        <button\r\n          id=\"routedModeButton\"\r\n          onClick={ () => {\r\n              navigate(href)\r\n              console.dir('call ' + href)\r\n          }}\r\n        >\r\n            &#10059;\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nfunction TopBar({mode}) {\r\n    const {HMBtn, href} = modeMap[mode] || modeMap.default\r\n\r\n    return (\r\n        <div className=\"buttonBar\">\r\n            <ReqDateButton />\r\n                <Spacer />\r\n            {HMBtn}\r\n                <Spacer />\r\n            <ReloadButton />\r\n                <Spacer />\r\n            <ModeButtonRTD href={href}/>\r\n                <Spacer />\r\n            <LoginButton />\r\n                <Spacer />\r\n            <InstrReqTab/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n","import {_Date,\r\n         TIME_SLOTS, } from 'JS/_Date'\r\n\r\n\r\n\r\nexport function scrollToDay(curDateN, direction = 'cur') {\r\n    const _defShownHour = 9\r\n    const targetDateObj = {\r\n        cur:   curDateN,\r\n        prev: +curDateN - 1,\r\n        next: +curDateN + 1\r\n    }\r\n    const targetDateN = targetDateObj[direction]\r\n\r\n    const targetTime  = targetDateN   * _Date.hr24\r\n                      + _defShownHour * 60*60*1000\r\n\r\n    scrollToTime(targetTime)\r\n}\r\n\r\n\r\nexport function scrollToTime(time = Date.now()) {\r\n    const scrollOptions = {\r\n        block: \"center\"\r\n    }\r\n\r\n    const containerNode = document.getElementById('inner')\r\n    const parentNode    = document.getElementById('mainTable')\r\n    if (!parentNode || !containerNode) return\r\n\r\n    const reqDateN    = _Date.dateMsToDateN(time)\r\n    const reqTimeSlot = TIME_SLOTS[_Date.msToSlotN(time)]\r\n    const targetId    = `${reqDateN}_${reqTimeSlot[2]}`\r\n    const targetNode  = document.getElementById(targetId)\r\n\r\n    if (!targetNode) {\r\n        const observer = observeToScroll(parentNode, targetId, scrollOptions)\r\n        setTimeout(() => {\r\n            observer.disconnect()\r\n        }, 5000)\r\n        return\r\n    }\r\n\r\n    const targetPosition    = targetNode.getBoundingClientRect()\r\n    const containerPosition = containerNode.getBoundingClientRect()\r\n        if (targetPosition.top       - containerPosition.top > 70\r\n         && containerPosition.bottom - targetPosition.bottom > 10) return targetNode\r\n\r\n    console.dir(`scroll to (${targetId})`)\r\n    targetNode.scrollIntoView(scrollOptions)\r\n    return targetNode\r\n}\r\n\r\n\r\nfunction observeToScroll(parentNode, targetId, scrollOptions) {\r\n    parentNode = parentNode || document.getElementById('mainTable')\r\n\r\n    const [tbodyId, trPartId] = (targetId + '_').split('_')\r\n\r\n    const action = (node, observer) => {\r\n        observer.disconnect()\r\n        node.scrollIntoView(scrollOptions)\r\n\r\n    }\r\n\r\n    const callback = (mutationsList, observer) => {\r\n        for (const mutation of mutationsList) {\r\n            if (mutation.type !== 'childList') continue\r\n\r\n            for (let node of mutation.addedNodes) {\r\n                if (node.id != tbodyId) continue\r\n                if (trPartId) {\r\n                    node = document.getElementById?.(targetId)\r\n                }\r\n                return action(node, observer)\r\n            }\r\n        }\r\n    };\r\n\r\n    const observer = new MutationObserver(callback)\r\n    observer.takeRecords()\r\n    observer.observe(parentNode, { childList: true })\r\n\r\n    return observer\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useRef, useCallback } from 'react';\r\n\r\n/**\r\n * @param {Function} onIntersect Function to call once intersected\r\n * @param {Object} optionsData Options object used to initialize IntersectionObserver\r\n * @param {boolean} onlyOnce Whether to stop observing after onIntersect is fired once\r\n *\r\n * @returns {Object} A ref object created by useRef. Use this to assign to the element you want to observe.\r\n *\r\n * Usage:\r\n * const Component = () => {\r\n *   const targetRef = useIntersect(() => console.dir('impressed!'))\r\n *\r\n *   return <div ref={targetRef}>Something here</div>\r\n * }\r\n */\r\nexport const useIntersect = (onEntries, options = null, onlyOnce = false, skip = false) => {\r\n    const intersected = useRef(false);\r\n    const observer = useRef(null);\r\n    const targetRef = useRef();\r\n\r\n    const handleIntersect = useCallback(\r\n        entries => {\r\n            const isIntersecting = entries[0]?.isIntersecting || false;\r\n            onEntries(entries);\r\n            if (isIntersecting) {\r\n                // onIntersect(entries)\r\n                if (!intersected.current && observer.current && onlyOnce) {\r\n                    observer.current.disconnect();\r\n                    observer.current = null;\r\n                    intersected.current = true;\r\n                }\r\n            }\r\n        },\r\n        [onEntries, onlyOnce, observer, intersected]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!intersected.current && !observer.current) {\r\n            observer.current = new IntersectionObserver(handleIntersect, options);\r\n            observer.current.observe(targetRef.current);\r\n        }\r\n\r\n        return () => {\r\n            //console.dir('cleaning')\r\n            if (observer.current) {\r\n                observer.current.disconnect();\r\n                observer.current = null;\r\n            }\r\n        };\r\n    }, [handleIntersect, options, targetRef]);\r\n\r\n    return targetRef;\r\n};\r\n\r\nexport default useIntersect\r\n","\r\nimport { evDispatch } from 'Hooks'\r\n\r\n\r\nconst addRecOnClick = (e) => evDispatch({ type: '@@ui/ADDREC_BTN', payload: e.target })\r\nexport function ADDREC_BTN({ freeTimeText }) {\r\n    return (\r\n        <button\r\n            className = \"freeTimeButton\"\r\n            onClick   = {addRecOnClick}\r\n        >\r\n            {freeTimeText}\r\n        </button>\r\n    )\r\n}\r\n\r\nconst editRecOnClick = (e) => evDispatch({ type: '@@ui/EDIT_BOOKING_CALL', payload: e.target.innerText })\r\nexport function EDITREC_BTN({ bookingId }) {\r\n    return (\r\n        <button\r\n            className = \"editRecButton\"\r\n            onClick   = {editRecOnClick}\r\n        >\r\n            {bookingId}\r\n        </button>\r\n    )\r\n}\r\n","// import React                         from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch, }              from 'react-redux'\r\n\r\nimport { _Date }                     from 'JS/_Date'\r\n\r\nimport { useIntersect, evDispatch }  from 'Hooks'\r\n\r\nimport { APP_CONSTANTS,\r\n         SELECTORS,\r\n         tbInViewUpd_ThunkCreator, } from 'JS/store.js'\r\n\r\n\r\n\r\nimport { ADDREC_BTN,\r\n         EDITREC_BTN, }              from './RecEdButtons'\r\n\r\nimport { COLS_CNT }                  from './BookingsTable'\r\n\r\n\r\n\r\nconst TbodyHeaderOnClik = () => evDispatch(\r\n    {\r\n        type: '@@ui/TBHEADER_CLICK',\r\n        payload: ('header Click ' + Date.now())\r\n    }\r\n)\r\nfunction TbodyHeader({ dateObj, headerStr, colsCnt }) {\r\n\r\n    return (\r\n        <tr id={dateObj.dateN + '_0'}\r\n            className={dateObj.HDay ? 'newDayTr HDay' : 'newDayTr'}\r\n        >\r\n            <th>\r\n                {dateObj.dayName}\r\n                {', '}\r\n                {dateObj.dayN}/{dateObj.monthN}\r\n            </th>\r\n            <td></td>\r\n            <td colSpan={colsCnt - 1}\r\n                onClick={TbodyHeaderOnClik}\r\n            >\r\n                {headerStr}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction getDateTbodyVals({ dayDataObj, dateN, ADMIN_TOGGLE, instrRequests, sidebar_viewTime }) {\r\n    const { timeCI,\r\n            timeValCI,\r\n            bookingIdCI } = APP_CONSTANTS.bookingsArrMap\r\n\r\n    const restStCI     = timeValCI + 1\r\n    const colsCnt      = COLS_CNT\r\n    const minFreeTime  = 2\r\n\r\n    const nowTime      = Date.now() - _Date.GMToffset\r\n    const curDateObj   = _Date.msToCustomDateObj(dateN * _Date.hr24)\r\n\r\n    const tbodyId      = dateN\r\n    const headerStr    = getHeaderStrForDay(curDateObj)\r\n\r\n\r\n    const rowsJSXArr = []\r\n    for (const tSlot in dayDataObj) {\r\n        let curSlotTrJSXarr = []\r\n        let curTSlotN  = Number(tSlot)\r\n        let curTime    = curDateObj.timeMS + dayDataObj[tSlot][timeCI]\r\n        let curTimeStr = _Date.msToCustomDateObj(curTime).timeStr\r\n        let freeTime   = 30 - dayDataObj[tSlot][timeValCI]\r\n\r\n        let instrReq         = instrRequests?.has(curTime)\r\n\r\n        let matchSidebarTime = curTime === sidebar_viewTime\r\n\r\n        let curRowsDataArr = dayDataObj[tSlot][restStCI]\r\n\r\n        let rowSpan    = curRowsDataArr.length\r\n                       + Number(freeTime >= minFreeTime && freeTime < 30)\r\n\r\n        let curThJSX   = doThJSX(rowSpan, curTimeStr)\r\n        let curTr0Id   = `${dateN}_${curTimeStr}`\r\n        let trClassStr = getTrClassList({\r\n                            freeTime, minFreeTime,\r\n                            timeSlotN: curTSlotN,\r\n                            curTime, nowTime,\r\n                            instrReq,\r\n                            matchSidebarTime,\r\n                         })\r\n\r\n\r\n\r\n        let subTd0_JSXArr = (freeTime >= 30)\r\n                          ? [doFreetimeTdJSX(colsCnt)]\r\n                          : doSubTdJSXArr(curRowsDataArr[0])\r\n\r\n\r\n        let curTr0JSX = <tr key = {curTr0Id}\r\n                            id  = {curTr0Id}\r\n                            className = {trClassStr}\r\n                        >\r\n                            {curThJSX}{subTd0_JSXArr}\r\n                        </tr>\r\n\r\n\r\n        curSlotTrJSXarr.push(curTr0JSX)\r\n\r\n        if (rowSpan > 1) {\r\n            let subStrArr = doSubTrJSXArr(tSlot, trClassStr, curRowsDataArr.slice(1))\r\n            curSlotTrJSXarr.push(subStrArr)\r\n        }\r\n\r\n        if (freeTime >= minFreeTime && freeTime < 30) {\r\n            curSlotTrJSXarr.push(\r\n                <tr className={trClassStr} key={\"adTr\" + tSlot}>\r\n                    {doFreetimeTdJSX(colsCnt, freeTime)}\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        rowsJSXArr.push(...curSlotTrJSXarr)\r\n    } //end do Tr for tSlots\r\n\r\n    return { colsCnt, curDateObj, tbodyId, headerStr, rowsJSXArr }\r\n\r\n\r\n    function doThJSX(rowSpan, timeStr) {\r\n        let ThJSX = <th rowSpan={rowSpan}>\r\n                        {timeStr}\r\n                        <br/>\r\n                        <span className=\"tdSpan\"></span>\r\n                    </th>;\r\n        return ThJSX;\r\n    } //end sub for Th\r\n\r\n    function doFreetimeTdJSX(colsCnt, freeTime) {\r\n        const freeTimeText = `-- свободно ${freeTime ? freeTime + ' мин.' : ''} --`;\r\n        return (\r\n            <td key=\"ft\" colSpan={colsCnt} className=\"freeTimeTd\">\r\n                <ADDREC_BTN freeTimeText={freeTimeText} />\r\n            </td>\r\n        );\r\n    } //end sub fot vacantTd\r\n\r\n\r\n    function doSubTdJSXArr(rowDataArr) {\r\n        const bookingId = rowDataArr[bookingIdCI - 1];\r\n\r\n        let tdJSXArr = rowDataArr\r\n            .slice(0, colsCnt - 1)\r\n            .map(\r\n                (element, i) => (\r\n                    <td key={'pf' + i} className=\"pf\">\r\n                        <pre>{element}</pre>\r\n                    </td>\r\n                )\r\n            );\r\n        if (ADMIN_TOGGLE && bookingId) {\r\n            tdJSXArr[bookingIdCI - 1] = (\r\n                <td key={'pf' + bookingIdCI - 1} className=\"pf\">\r\n                    <EDITREC_BTN bookingId={bookingId} />\r\n                </td>\r\n            );\r\n        }\r\n        return tdJSXArr;\r\n    }\r\n\r\n    function doSubTrJSXArr(tSlot, className, subDataArr) {\r\n        let TrJSXArr = subDataArr.map(\r\n            (rowDataArr, i) => (\r\n                <tr key={tSlot + '_' + i} className={className}>\r\n                    {doSubTdJSXArr(rowDataArr)}\r\n                </tr>\r\n            )\r\n        );\r\n        return TrJSXArr;\r\n    } //end sub fot Td\r\n} // END dayObj to TbodyJSX\r\n\r\nfunction getHeaderStrForDay(dateObj) {\r\n    let dateStr   = _Date.dateToLongStrRu(dateObj.date);\r\n    let headerStr = `${dateStr} ${dateObj.HDay ? ' (вых)' : ' (будень)'}`;\r\n    return headerStr;\r\n}\r\nfunction getTrClassList({ freeTime, minFreeTime, timeSlotN, curTime, nowTime, instrReq, matchSidebarTime }) {\r\n    const trClassOptions = {\r\n        dayNight        : (timeSlotN <= 17)         ? 'groupN'             : 'groupD',\r\n        oddity          : (timeSlotN % 2)           ? 'odd'                : 'even',\r\n        noTime          : (freeTime <= minFreeTime) ? 'noTime-book'        : '',\r\n        pastTime        : (curTime < nowTime)       ? 'pastSlot'           : '',\r\n        instrReq        : (instrReq)                ? 'instrReq'           : '',\r\n        matchSidebarTime: (matchSidebarTime)        ? 'bt-sidebar_viewTime': '',\r\n    }\r\n\r\n    const trClass = Object.values(trClassOptions).reduce(\r\n        (acc, classOpt) => acc.concat(' ', classOpt)\r\n    )\r\n\r\n    return trClass\r\n}\r\nfunction setTBodyIntersect({ tbodyData, dispatcher }) {\r\n    const intersectOptions = {\r\n        root: null,\r\n        rootMargin: '-20% 0% -80% 0%'\r\n    };\r\n\r\n    const intersectFunc = (e) => {\r\n        const {\r\n            isIntersecting,\r\n        } = e[0];\r\n\r\n        if (!isIntersecting)\r\n            return;\r\n\r\n        dispatcher(tbInViewUpd_ThunkCreator(tbodyData));\r\n    };\r\n\r\n    return { intersectOptions, intersectFunc };\r\n}\r\n\r\n\r\n\r\nexport function DateTbody({ dateN, dayDataObj, instrRequests }) {\r\n    const dispatch = useDispatch()\r\n    const ADMIN_TOGGLE     = useSelector(SELECTORS.userObj).role === 'admin'\r\n    const sidebar_viewTime = useSelector(SELECTORS.sidebar_viewTime)\r\n\r\n    const { colsCnt,\r\n            curDateObj,\r\n            headerStr,\r\n            tbodyId,\r\n            rowsJSXArr } = getDateTbodyVals({ dayDataObj, dateN, ADMIN_TOGGLE, instrRequests, sidebar_viewTime })\r\n\r\n    const { intersectFunc, intersectOptions } = setTBodyIntersect({\r\n        tbodyData: { headerStr, dateN },\r\n        dispatcher: dispatch\r\n    })\r\n\r\n    const targetRef = useIntersect(intersectFunc, intersectOptions)\r\n\r\n    return (\r\n        <tbody\r\n            ref = {targetRef}\r\n            id  = {tbodyId}\r\n            className = \"bookingsTable\"\r\n        >\r\n            <TbodyHeader\r\n                dateObj   = {curDateObj}\r\n                headerStr = {headerStr}\r\n                colsCnt   = {colsCnt}\r\n            />\r\n            {rowsJSXArr}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default DateTbody","\r\n/* layout\r\nbokingsAllDataObj = {\r\n    dayN:{\r\n        timeSlotI:  [SlotTime, SlotBokedTime, [RecBookedTIme, Terif, ...],\r\n                    ...,\r\n                    []\r\n        ],\r\n        ...\r\n        timeSlotI: []\r\n    },\r\n    ...,\r\n    dayN:{}\r\n}\r\n*/\r\n\r\nimport React,\r\n      { memo,\r\n        useState,\r\n        useEffect,\r\n        useRef,\r\n        useLayoutEffect,\r\n        useImperativeHandle,\r\n        forwardRef,\r\n        Fragment }                 from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch,\r\n         shallowEqual,}            from 'react-redux'\r\n\r\nimport { APP_CONSTANTS,\r\n         APP_VARS, }               from 'JS/store'\r\n\r\nimport { _Date, }                  from 'JS/_Date'\r\n\r\nimport { usePrevious,\r\n         useBus, }                 from 'Hooks'\r\n\r\n\r\nimport { store,\r\n         tbodyInViewUPD,\r\n         bookingsDayDataUPD,\r\n         bTableDateUPD,\r\n         testActionMD,\r\n         tbInViewUpd_ThunkCreator,\r\n         SELECTORS, }              from 'JS/store.js'\r\n\r\n\r\nimport { scrollToDay,\r\n         scrollToTime, }           from './scrollServ'\r\n\r\nimport { DateTbody }               from './BT_Tbody'\r\n\r\n\r\n\r\n\r\n\r\nconst StopwatchSVG = <svg width=\"14\" height=\"14\" viewBox=\"0 0 16 16\">\r\n    <path d=\"M8 3.019v-1.019h2v-1c0-0.552-0.448-1-1-1h-3c-0.552 0-1 0.448-1 1v1h2v1.019c-3.356 0.255-6 3.059-6 6.481 0 3.59 2.91 6.5 6.5 6.5s6.5-2.91 6.5-6.5c0-3.422-2.644-6.226-6-6.481zM11.036 13.036c-0.944 0.944-2.2 1.464-3.536 1.464s-2.591-0.52-3.536-1.464c-0.944-0.944-1.464-2.2-1.464-3.536s0.52-2.591 1.464-3.536c0.907-0.907 2.101-1.422 3.377-1.462l-0.339 4.907c-0.029 0.411 0.195 0.591 0.497 0.591s0.527-0.18 0.497-0.591l-0.339-4.907c1.276 0.040 2.47 0.555 3.377 1.462 0.944 0.944 1.464 2.2 1.464 3.536s-0.52 2.591-1.464 3.536z\">\r\n    </path></svg>\r\n\r\nconst ADM_HEADER         = true\r\n\r\nconst BT_HEADER_USER     = [ 'Time', StopwatchSVG, 'tarif', 'Flyers', 'Notes', 'Booking №', 'paid' ]\r\nconst BT_HEADER_ADM      = [ 'mail','phone']\r\nconst BT_HEADER_ARR      = ADM_HEADER ? BT_HEADER_USER.concat(BT_HEADER_ADM) : BT_HEADER_USER\r\nconst BT_HEADER_COLS_ARR = BT_HEADER_ARR.slice(1).map( (item, i) =>\r\n    <th key={i} className = \"th-header\">\r\n        {item}\r\n    </th>\r\n)\r\nexport const COLS_CNT    = BT_HEADER_ARR.length\r\n\r\nconst BT_DATES_OFFSET    = APP_CONSTANTS.BT_DATES_OFFSET\r\n\r\nconst BT_BLANK_TBODY     = () => (\r\n    <tbody className = \"bt-serv-tbody\">\r\n        <tr>\r\n            <td colSpan={COLS_CNT} className = \"bt-serv-td\">\r\n                <br /><br /><br /> NO DATA <br />\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n)\r\n\r\nconst BT_EVENTS = {\r\n    '@@ui/NAV_BTN_CLICK': (curDateN) => (e) => {\r\n        scrollToDay(curDateN, e.payload)\r\n    },\r\n\r\n    '@@ui/TEST_BTN':\r\n        (dispatch, tableDateN, endOffset) => () => {\r\n         dispatch( bTableDateUPD(tableDateN+endOffset))\r\n    },\r\n\r\n    '@@ui/TEST_BTN2':\r\n        (dispatch, newDateN) => () => {\r\n         dispatch( tbInViewUpd_ThunkCreator(newDateN))\r\n    },\r\n}\r\n\r\nconst useJumpToSidebarViewTime = (sidebar_viewTime) => {\r\n    useEffect(() => {\r\n        if (!sidebar_viewTime) return\r\n\r\n        const tableDateN       = SELECTORS.bTableDateN( store.getState() )\r\n        const jumpDate         = _Date.dateMsToDateN(sidebar_viewTime)\r\n        const isCurDateInTable = (jumpDate >= tableDateN + BT_DATES_OFFSET.stOffset)\r\n                              && (jumpDate <= tableDateN + BT_DATES_OFFSET.endOffset)\r\n\r\n        if ( !isCurDateInTable ) {\r\n            store.dispatch( bTableDateUPD(jumpDate) )\r\n        }\r\n        const targetNode = scrollToTime(sidebar_viewTime)\r\n    }, [sidebar_viewTime,])\r\n}\r\n\r\n\r\n\r\n\r\nfunction DayInViewDiv() {\r\n    const dispatch      = useDispatch()\r\n    const curTbodyInfo  = useSelector(SELECTORS.curTbodyInfo)\r\n    const curDateN      = curTbodyInfo.dateN\r\n    const testOnClik    = () => dispatch( testActionMD( 'HEAD DIV Click ' +Date.now() ) )\r\n\r\n    useBus(\r\n        '@@ui/NAV_BTN_CLICK',\r\n         BT_EVENTS['@@ui/NAV_BTN_CLICK'](curDateN),\r\n        [curDateN]\r\n    )\r\n\r\n    return (\r\n        <div\r\n            id        = 'curDayDiv'\r\n            className = 'curDayDiv'\r\n            onClick   = { testOnClik }\r\n        >\r\n            {curTbodyInfo.headerStr}\r\n        </div>\r\n    )\r\n}\r\nfunction BookingsTableHeader () {\r\n    return (\r\n        <tbody id=\"btHeaderTbody\">\r\n            <tr id=\"btHeaderTr\" className=\"tableHeader\">\r\n                <th id=\"th0\" className=\"th-header th0\" >\r\n                    {BT_HEADER_ARR[0]}\r\n                </th>\r\n                {BT_HEADER_COLS_ARR}\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\nfunction TbodyesSet({dateNsArr}) {\r\n    const bookingDataObj = useSelector(SELECTORS.bookingsObjDateNs(dateNsArr), shallowEqual)\r\n    let   instrRequests  = useSelector(SELECTORS.instrRequests)\r\n\r\n    instrRequests = instrRequests\r\n        ? new Set(\r\n            Object.values( instrRequests).map(instrRequest => instrRequest.timeFlight )\r\n          )\r\n        : null\r\n\r\n\r\n    let   needDataFlag   = false\r\n    const tbodiesArr = dateNsArr.map( (curDateN, i) => {\r\n        if ( !bookingDataObj[curDateN]) {\r\n            needDataFlag = true\r\n            return <BT_BLANK_TBODY key = {curDateN}/>\r\n        }\r\n\r\n        return <DateTbody\r\n            key           = {curDateN}\r\n            dateN         = {curDateN}\r\n            dayDataObj    = {bookingDataObj[curDateN]}\r\n            instrRequests = {instrRequests}\r\n        />\r\n    })\r\n\r\n    if (needDataFlag) {//debugger\r\n     //console.log('need Data', dateNsArr[0])\r\n    }\r\n\r\n    return tbodiesArr\r\n}\r\n\r\n\r\nexport function BookingsTable() {\r\n    const {stOffset, endOffset} = BT_DATES_OFFSET\r\n\r\n    const dispatch         = useDispatch()\r\n    const sidebar_viewTime = useSelector(SELECTORS.sidebar_viewTime)\r\n    const tableDateN       = useSelector(SELECTORS.bTableDateN)\r\n    const reqDateStr       = useSelector(SELECTORS.period, shallowEqual).reqDate\r\n    const recDateMs   = new Date(reqDateStr).getTime() || Date.now()\r\n    const reqDateN    = _Date.dateMsToDateN(recDateMs)\r\n\r\n    const dateNsArr   = Array.from( {length: 1 + endOffset - stOffset},\r\n                            ( _, i) => +tableDateN + (stOffset + i)\r\n                        )\r\n\r\n    useEffect(() => {\r\n        dispatch( bTableDateUPD(reqDateN) )\r\n        scrollToDay(reqDateN)\r\n    }, [reqDateN, dispatch])\r\n\r\n    useJumpToSidebarViewTime(sidebar_viewTime)\r\n\r\n\r\n    return  <>\r\n        <DayInViewDiv />\r\n        <table id=\"mainTable\" className=\"bookingsTable\">\r\n            <BookingsTableHeader />\r\n            <TbodyesSet dateNsArr = {dateNsArr}/>\r\n        </table>\r\n    </>\r\n}\r\n\r\nexport default BookingsTable\r\n","import './bookings.css'\r\n\r\nimport BookingsTable      from './BookingsTable'\r\n\r\nexport default BookingsTable","import { useEffect, }         from 'react'\r\n\r\nimport { _Date, }             from 'JS/_Date'\r\n\r\nimport { ftTableDateUPD, }    from 'JS/store.js'\r\n\r\n\r\n\r\n\r\nfunction timeToTdId(timeMs, daysNs) {\r\n    const dateN = _Date.dateMsToDateN(timeMs)\r\n    const slotN = _Date.msToSlotN(timeMs)\r\n    const dayIndex  = daysNs.indexOf(dateN)+1\r\n    const slotIndex = slotN+1\r\n    const tdId = dayIndex > 0\r\n               ? 'r' + slotIndex + 'c' + dayIndex\r\n               : null\r\n    return tdId\r\n}// end timeToTdId\r\n\r\n\r\nexport const useJumpToSidebarViewTime = (sideBarTime, daysNs, dispatch) => {\r\n    let  tdBookingEd = sideBarTime\r\n        ? timeToTdId(sideBarTime, daysNs)\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (!sideBarTime) return\r\n\r\n        if (!tdBookingEd) {\r\n            const targetDateN = _Date.dateMsToDateN(sideBarTime)\r\n            dispatch( ftTableDateUPD(targetDateN) )\r\n            return null\r\n        }\r\n\r\n        scrollToTdId(tdBookingEd)\r\n    }, [sideBarTime, tdBookingEd, dispatch])\r\n\r\n    return tdBookingEd\r\n}\r\n\r\nfunction scrollToTdId(targetId) {\r\n    const scrollOptions = {\r\n        behavior: 'smooth',\r\n        block   : 'center',\r\n        inline  : 'center',\r\n    }\r\n\r\n    const margin_left     = 40\r\n    const margin_right    = 0\r\n    const margin_vertical = 20\r\n\r\n    const containerNode = document.getElementById('inner')\r\n    const parentNode    = document.getElementById('mainTable')\r\n    if (!parentNode || !containerNode) return\r\n\r\n    const targetNode = document.getElementById(targetId)\r\n    if (!targetNode) return\r\n\r\n    const targetPosition    = targetNode.getBoundingClientRect()\r\n    const containerPosition = containerNode.getBoundingClientRect()\r\n\r\n    if (   targetPosition.top       - containerPosition.top > margin_vertical\r\n        && containerPosition.bottom - targetPosition.bottom > margin_vertical\r\n\r\n        && targetPosition.left     - containerPosition.left > margin_left\r\n        && containerPosition.right - targetPosition.right   > margin_right\r\n    ) return\r\n\r\n    console.dir(`scroll to (${targetId})`)\r\n    targetNode.scrollIntoView(scrollOptions)\r\n\r\n    return\r\n}","/* eslint-disable no-useless-concat */\r\n\r\nimport React,\r\n    { useState,\r\n      useEffect, }         from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch,\r\n         shallowEqual,}    from 'react-redux'\r\n\r\nimport { useIntersect,\r\n         useBus,\r\n         evDispatch, }     from 'Hooks'\r\n\r\nimport { _Date,\r\n         TIME_SLOTS }      from 'JS/_Date'\r\n\r\nimport { store,\r\n         SELECTORS,\r\n         APP_CONSTANTS,\r\n         APP_VARS,\r\n         ftTableDateUPD, } from 'JS/store.js'\r\n\r\nimport { useJumpToSidebarViewTime,\r\n         scrollToTime, }   from './scrollServ'\r\n\r\n\r\n\r\nconst FT_DATES_OFFSET = APP_CONSTANTS.FT_DATES_OFFSET\r\n\r\n\r\nfunction parseTdIndex(tdId) {\r\n    return  tdId.slice(1)\r\n                .split('c')\r\n                .map( val => Number(val) - 1) //\"r_c_\"\r\n}// end parse TdIndex\r\n\r\n\r\nfunction ftOnClick(e) {\r\n    const tdId       = e.target.nodeName === 'TD'\r\n                     ? e.target.id\r\n                     : null\r\n\r\n    if (!tdId) { return }\r\n\r\n    const [slotIndex,\r\n           dayIndex] = parseTdIndex(tdId)\r\n\r\n    if ( slotIndex < 0 || dayIndex < 0 )  { return }\r\n\r\n    const timeSlot   = TIME_SLOTS[slotIndex]\r\n    const dateN      = SELECTORS.ftTableDateN(store.getState())\r\n                      +FT_DATES_OFFSET['stOffset']\r\n                      +dayIndex\r\n\r\n    const date       = _Date.dayNumToCustomDateObj(dateN)\r\n\r\n    evDispatch({type: '@@ui/FT_CELL_CLICK', payload: (+date.timeMS +timeSlot[0])})\r\n}\r\n\r\n\r\nfunction getDaysNsArr(reqDayN, datesOffsetArr){\r\n    const {stOffset, endOffset} = datesOffsetArr\r\n    return Array.from( {length: 1 + endOffset - stOffset},\r\n        ( _, i) => +reqDayN + (stOffset + i)\r\n    )\r\n}\r\n\r\n//CondFofmat sub functions\r\nfunction getTrClassName(ri) {\r\n    let groupName = (ri <= 18) ? 'groupN' : 'groupD'\r\n\r\n    if (ri % 2)               { groupName += ' odd' }\r\n    if (ri == 37 || ri == 41) { groupName += ' trPrimeTime' }\r\n    return groupName\r\n}\r\nfunction getTdClassName({ minTime, ri, freeTimeVal, HDay, isPast, isInBED}) {\r\n    let tdClassName = ''\r\n    if (freeTimeVal > 28) {\r\n        tdClassName = 'fullTime'\r\n    } else if (freeTimeVal < 2) {\r\n        tdClassName = 'noTime'\r\n    } else if (freeTimeVal < minTime) {\r\n        tdClassName = 'lessTime'\r\n    }\r\n\r\n    if (HDay && (ri >= 21 && ri <= 41)) {\r\n        tdClassName += ' ' + 'tdHDay'\r\n    }\r\n\r\n    if (isPast) {\r\n        tdClassName += ' ' + 'isPast'\r\n    }\r\n\r\n    if (isInBED) {\r\n        tdClassName += ' ' + 'isInBED'\r\n    }\r\n    return tdClassName\r\n}\r\n//End CondFofmat sub functions\r\n\r\n\r\n// function doColgroup(th0, tdArr) {\r\n//     tdArr.forEach( (dayN, iDay) => {\r\n//         let dayObj  = _Date.dayNumToCustomDateObj(+dayN)\r\n//         let HDayStr = dayObj.HDay ? 'HDay' : ''\r\n//         let dateStr = `${dayObj.dayN}/${dayObj.monthN}`\r\n//         let isPast  = dayN < NOW_DATE_N\r\n//         let ci      = iDay+1\r\n//         tdArr[0][ci] = (\r\n//             <td key={ci}\r\n//                 className={ `td-header ${HDayStr} ${isPast ? 'isPast' : ''}`}\r\n//             >\r\n//                 {dateStr}\r\n//             </td>)\r\n//\r\n//         adjRows({ci, dayBokingData: bokingsAllDataObj[dayN], tdArr, HDay : HDayStr, isPast, minTime})\r\n//     })\r\n//     return tdArr\r\n// }\r\n\r\nfunction doTdArr({ minTime, bokingsAllDataObj, daysNs, tdBookingEd }) {\r\n    const NOW_DATE_N    = _Date.dateMsToDateN(Date.now())\r\n    let tdArr           = Array.from(TIME_SLOTS, () => [])\r\n        tdArr.unshift([])\r\n\r\n    daysNs.forEach( (dayN, iDay) => {\r\n        const dayBokingData = bokingsAllDataObj[dayN]\r\n        if (!dayBokingData) { return}\r\n        let dayObj  = _Date.dayNumToCustomDateObj(+dayN)\r\n        let HDayStr = dayObj.HDay ? 'HDay' : ''\r\n        let dateStr = `${dayObj.dayN}/${dayObj.monthN}`\r\n        let isPast  = dayN < NOW_DATE_N\r\n        let ci      = iDay+1\r\n        tdArr[0][ci] = (\r\n            <td key={ci}\r\n                className={ `td-header ${HDayStr} ${isPast ? 'isPast' : ''}`}\r\n            >\r\n                {dateStr}\r\n            </td>)\r\n\r\n        adjRows({ci, dayBokingData, tdArr, HDay : HDayStr, isPast, minTime, tdBookingEd})\r\n    })\r\n    return tdArr\r\n}\r\n\r\nfunction adjRows({ci, dayBokingData, tdArr, HDay, isPast, minTime, tdBookingEd}) {\r\n    let curDayTimeSlots    = Object.keys(dayBokingData)\r\n    curDayTimeSlots.forEach( (slot, iSlot) => {\r\n        let ri             = iSlot+1\r\n        let tdID           = 'r' +ri +'c' +ci\r\n        let freeTimeVal    = 30 - dayBokingData[slot][1]\r\n        let isInBED        = tdID == tdBookingEd\r\n        let tdClass        = getTdClassName({freeTimeVal, minTime, ri, HDay, isPast, isInBED})\r\n        tdArr[ri][ci] = (\r\n            <td key       = {tdID}\r\n                id        = {tdID}\r\n                className = {tdClass || null}\r\n            >\r\n                {freeTimeVal}\r\n            </td>\r\n            )\r\n    })\r\n}// end for rows\r\n\r\n\r\n\r\n\r\nconst Tr0 = ({children}) => {\r\n    return (\r\n        <tr className=\"tableHeader\">\r\n            <th id=\"r0c0\" className=\"th0\">Slot</th>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction TrSlot( {ri, thText, children } ) {\r\n    let groupClass = getTrClassName(ri)\r\n    return (\r\n        <tr className={groupClass}>\r\n            <th className={groupClass} id={`r${ri}c0`}>{thText}</th>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst useGetReqDaysData = (datesOffsetArr = FT_DATES_OFFSET) => {\r\n    const reqDateStr  = useSelector(SELECTORS.period, shallowEqual).reqDate\r\n    const recDateMs   = new Date(reqDateStr).getTime() || Date.now()\r\n    const reqDateN    = _Date.dateMsToDateN(recDateMs)\r\n    const tableDateN  = useSelector(SELECTORS.ftTableDateN) || reqDateN\r\n    const daysNs      = getDaysNsArr(tableDateN, datesOffsetArr)\r\n\r\n    return {reqDateN, tableDateN, daysNs}\r\n}\r\n\r\n\r\n\r\nfunction FreetimeTable() {\r\n    const timeSlots         = TIME_SLOTS\r\n\r\n    const dispatch          = useDispatch()\r\n    // const ADMIN_TOGGLE      = useSelector( SELECTORS.userObj ).role === 'admin'\r\n    const minTime           = useSelector( SELECTORS.minTime )\r\n    const bokingsAllDataObj = useSelector( SELECTORS.bookingsObj )\r\n    const { tableDateN,\r\n            reqDateN,\r\n            daysNs}         = useGetReqDaysData()\r\n    const sideBarTime       = useSelector( SELECTORS.sidebar_viewTime)\r\n    let  tdBookingEd        = useJumpToSidebarViewTime(sideBarTime, daysNs, dispatch)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch( ftTableDateUPD(reqDateN) )\r\n    }, [reqDateN, dispatch])\r\n\r\n\r\n    useBus(\r\n        '@@ui/NAV_BTN_CLICK',\r\n        (ev) => {\r\n            let targetDateN = ev.payload === 'next'\r\n                            ? tableDateN + 14\r\n                            : tableDateN - 14\r\n            dispatch( ftTableDateUPD(targetDateN) )\r\n        },\r\n        [tableDateN]\r\n    )\r\n\r\n\r\n    let tdArr = doTdArr({minTime, bokingsAllDataObj, daysNs, tdBookingEd})\r\n\r\n    //Init first/header row\r\n    let trArr = [<Tr0 key=\"tr0\">{tdArr[0]}</Tr0>]\r\n\r\n    //Init data rows\r\n    timeSlots.forEach( (slot, iSlot) => {\r\n        let timeHeader    = timeSlots[iSlot][2]\r\n        trArr[iSlot+1]    = <TrSlot\r\n                                ri     = { iSlot + 1 }\r\n                                thText = { timeHeader }\r\n                                key    = { timeHeader }\r\n                            >\r\n                                {tdArr[iSlot + 1]}\r\n                            </TrSlot>\r\n    })\r\n\r\n    return(\r\n        <table\r\n            id        = \"mainTable\"\r\n            className = \"freetimeTable\"\r\n            onClick   = { ftOnClick }\r\n        >\r\n            <tbody id=\"freeTimeTbody\">\r\n                {trArr}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default FreetimeTable","import './freetime.css'\r\n\r\nimport FreetimeTable      from './FreetimeTable'\r\n\r\nexport default FreetimeTable","import { useEffect }    from 'react'\r\n\r\n\r\n\r\nfunction LoginInfo({message = '', closeAction, timeout}) {\r\n\r\n    useEffect(() => {\r\n        if (!timeout || !closeAction) return\r\n        const timerId = setTimeout(closeAction, timeout)\r\n\r\n        return () =>  clearTimeout(timerId)\r\n    }, [timeout, closeAction])\r\n\r\n\r\n    let className = 'loginInfoBtn'\r\n    if (message.includes('SUBMITTING')) className += ' hidden'\r\n    if (message.includes('Error'))      className += ' error'\r\n\r\n\r\n    return (\r\n        <div\r\n            id=\"loginInfo\"\r\n        >\r\n            {message}\r\n            <br /><br />\r\n            <button\r\n                onClick   = {closeAction}\r\n                className = {className}\r\n            >\r\n                OK\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginInfo\r\n","import { useEffect,\r\n         useState }          from \"react\"\r\nimport { useForm }           from \"react-hook-form\"\r\nimport { navigate }          from 'hookrouter'\r\n\r\nimport \"./LoginForm.css\"\r\nimport LoginInfo             from \"./LoginInfo\"\r\n\r\nimport { fetchAPI } from \"JS/fetchAPI\"\r\n\r\nimport {\r\n    store,\r\n    APP_CONSTANTS,\r\n    SELECTORS,\r\n    getUser,\r\n}                            from 'index'\r\n\r\nimport {\r\n    userDataUPD,\r\n}                            from 'JS/store.js'\r\n\r\n\r\n\r\nfunction storeUser({name, mail, ps, role='user'}) {\r\n    localStorage.setItem('name', name)\r\n    localStorage.setItem('mail', mail)\r\n    localStorage.setItem('ps', ps)\r\n    localStorage.setItem('role', role)\r\n    store.dispatch( userDataUPD( {name, mail, ps, role,} ) )\r\n  }\r\n\r\n\r\n\r\n\r\nfunction checkApiResponse(apiResponse) {\r\n    let clearedApiResponse = {\r\n        status: false,\r\n        content: ''\r\n    };\r\n\r\n    //debugger\r\n     console.log(apiResponse)\r\n\r\n    if (!apiResponse) {\r\n        clearedApiResponse.content = 'No response!';\r\n\r\n    } else if (!apiResponse.status === undefined || !apiResponse.content) {\r\n        clearedApiResponse.content = `Invalid response: \\n ${apiResponse}`;\r\n\r\n    } else if ( /200/.test(apiResponse.status) ) {\r\n        clearedApiResponse.status  = true;\r\n        clearedApiResponse.content = apiResponse.content;\r\n    } else if ( /20\\d/.test(apiResponse.status) ) {\r\n        clearedApiResponse.status  = apiResponse.status;\r\n        clearedApiResponse.content = apiResponse.content;\r\n    } else {\r\n        clearedApiResponse.content = `Error!: \\n ${apiResponse.content}`;\r\n    }\r\n    return clearedApiResponse;\r\n}\r\n\r\nfunction loginResponseHandler(ReqResult) {\r\n    let loginResponse    = {}\r\n\r\n    let clearedResponse  = checkApiResponse(ReqResult);\r\n\r\n    if ( clearedResponse.status === true ) {\r\n        let {nick, mail, ps, role} = clearedResponse.content\r\n        let userObj                = {name: nick, mail, ps, role}\r\n\r\n        loginResponse    = {\r\n            status:  'SUCSESS',\r\n            message:`Пользователь ${userObj.name}\r\n                           успешно авторизован!`,\r\n            action: () => storeUser(userObj)\r\n        }\r\n    } else if ( clearedResponse.status == 201 ) {\r\n        loginResponse    = {\r\n            status:  'PENDING',\r\n            message: clearedResponse.content,\r\n            action: () => void(0)\r\n        }\r\n\r\n    } else {\r\n        loginResponse    = {\r\n            status:  false,\r\n            message: clearedResponse.content,\r\n            action: () => void(0)\r\n        }\r\n    }\r\n\r\n    return loginResponse\r\n}// end loginResponseHandler\r\n\r\nasync function loginFetch (data) {\r\n    const url        = APP_CONSTANTS[APP_CONSTANTS.DEFAULT_SOURCE]\r\n    const reqCommand = 'login'\r\n    let reqData  = {\r\n        mail: data.email,\r\n        ps:   data.password,\r\n    }\r\n\r\n    let params   = {\r\n                command: reqCommand,\r\n                data: JSON.stringify(reqData)\r\n            }\r\n    let options  = {'method': 'GET'}\r\n    let response = await fetchAPI(url, {params, options})\r\n\r\n    return response\r\n}\r\n\r\n\r\nfunction getSubmit(setLoginfoCall) {\r\n    return async (data) => {\r\n        //debugger\r\n        console.time('getSubmit')\r\n        let loginResponse   = await loginFetch(data)\r\n        let responseHandler = loginResponseHandler(loginResponse)\r\n\r\n        responseHandler?.action()\r\n        let closeAction = (responseHandler?.status == 'SUCSESS')\r\n                       ? () => { navigate('/default')\r\n                                 window.location.reload()\r\n                                 setLoginfoCall(null) }\r\n                       : () => setLoginfoCall(null)\r\n        let timeout    = (responseHandler?.status == 'SUCSESS')\r\n                       ? 1500\r\n                       : null\r\n\r\n        setLoginfoCall({\r\n            message     : responseHandler?.message,\r\n            closeAction,\r\n            timeout\r\n        })\r\n        console.timeEnd('getSubmit')\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction LoginForm() {\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState,    } = useForm()\r\n\r\n    const [loginfoCall, setLoginfoCall] = useState(null)\r\n\r\n    const {\r\n        errors,\r\n        touchedFields,\r\n        isSubmitting, } = formState\r\n\r\n\r\n    function restorePass(e) {\r\n        //debugger\r\n         console.log('RESTOREPASS: ')\r\n         setValue('password', 'RESTOREPASS')\r\n         handleSubmit()\r\n         setTimeout(() => {\r\n            setValue('password', '')\r\n         }, 100)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form\r\n                noValidate\r\n                onSubmit = { handleSubmit(getSubmit(setLoginfoCall)) }\r\n            >\r\n                <label htmlFor=\"inputEmail\">E-mail</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"inputEmail\"\r\n                    {...register('email', {\r\n                        required: \"Enter your e-mail\",\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                            message: \"Enter a valid e-mail address\"\r\n                        }\r\n                    })}\r\n                />\r\n                { errors.email && <p className=\"error\">{errors.email.message}</p> }\r\n\r\n                <label htmlFor=\"inputPassword\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"inputPassword\"\r\n                    {...register('password', { required: \"Enter your password\" })} />\r\n                    {errors.password && <p className=\"error\">{errors.password.message}</p>}\r\n\r\n                <div id=\"loginForm-btn-block\">\r\n                    <button\r\n                        type     = \"submit\"\r\n                        disabled = {isSubmitting}\r\n                    >\r\n                        Login\r\n                    </button>\r\n                    <button\r\n                        id       = \"restorePass\"\r\n                        tabIndex = \"-1\"\r\n                        onClick  = {restorePass}\r\n                        disabled = {!touchedFields.email || errors.email}\r\n                    >\r\n                        Напомнить\r\n                    </button>\r\n\r\n                </div>\r\n            </form>\r\n            {isSubmitting && <LoginInfo message=\"АВТОРИЗАЦИЯ ...\"/> }\r\n            {loginfoCall  && <LoginInfo {...loginfoCall} /> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm","import LoginForm from \"./LoginForm\"\r\nimport LoginInfo from \"./LoginInfo\";\r\nexport default LoginForm","import { APP_CONSTANTS, }  from 'index'\r\n\r\n\r\nexport const API_FLYERS_MAP = APP_CONSTANTS.flyersAPI_dataMap\r\n\r\n\r\nexport const DEFAULT_FLYERS_VALS = {\r\n    flyerId: '',\r\n    fullname: '',\r\n    lastname: '',\r\n    firstname: '',\r\n    secondname: '',\r\n    email: '',\r\n    phone: '',\r\n    catid: 0,\r\n    // birthdate: '',\r\n    notes: '',\r\n}\r\n\r\nexport const CAT_ID_MAP = {\r\n    'Х.З.':      0,\r\n    'ПР':        1,\r\n    'Спорт':     2,\r\n    'Дети':      3,\r\n    'Сотрудник': 5,\r\n    'Дилер':     6,\r\n    'Иностр.':   9,\r\n}\r\n\r\nexport const FLYERS_ED_DATACHECK = {\r\n    flyerId:    (flyerId)    => typeof flyerId === 'number'\r\n                                ? true\r\n                                : console.warn('WRONG FlyerID '    + flyerId?.toString?.()),\r\n\r\n    flyersData: (flyersData) => flyersData?.length\r\n                                ? true\r\n                                : console.warn('WRONG flyersData ' + flyersData?.toString?.()),\r\n}\r\n\r\n\r\nexport function getFlyersFilter({flyersData, flyersMap = API_FLYERS_MAP, limit = 10}) {\r\n    if ( !FLYERS_ED_DATACHECK.flyersData(flyersData) ) return\r\n\r\n    return (testStr = ' ') => {\r\n        testStr         = testStr.toLowerCase()\r\n        const keyIndex  = flyersMap['fullname']\r\n        const resFields = ['flyerId', 'fullname', 'email', 'phone']\r\n\r\n        let filteredArr = flyersData.filter(\r\n            record => record[ keyIndex ]\r\n                        .toLowerCase()\r\n                        .includes( testStr )\r\n        ).slice(0, limit)\r\n\r\n        let resArr  = filteredArr.map(\r\n            record => resFields.map(\r\n                field => record[ flyersMap[field] ]\r\n            )\r\n        )\r\n\r\n        return resArr\r\n    }\r\n}\r\n\r\nexport function findFlyerData({flyerId, flyersData, flyersDataMap = API_FLYERS_MAP}) {\r\n    if ( !FLYERS_ED_DATACHECK.flyersData(flyersData) ) return\r\n\r\n    const resFields = ['flyerId', 'fullname', 'email', 'phone']\r\n    const flyerData = flyersData.find(\r\n        rec => rec[ flyersDataMap['flyerId'] ] === flyerId\r\n    )\r\n\r\n    return resFields.map(\r\n        fieldName => [\r\n            fieldName,\r\n            flyerData[ flyersDataMap[fieldName] ]\r\n        ]\r\n    )\r\n}","import React,\r\n     { useState,\r\n       Fragment }          from \"react\"\r\n\r\nimport { getFlyersFilter }            from \"../serv\"\r\n// import PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nfunction SuggestionsListComponent({filteredSuggestions, activeSuggestion, onClick, onMouseOver, onMouseOut}) {\r\n    if (!filteredSuggestions.length) {\r\n        return (\r\n            <div className=\"no-suggestions\" >\r\n                <em>Совпадения не найдены</em>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n                let className\r\n                let visualisation = suggestion[1]\r\n\r\n                if (index === activeSuggestion) {\r\n                    className     = \"suggestion-active\"\r\n                    visualisation = <>\r\n                        {suggestion[1]}<br />\r\n                        {suggestion[2]}<br />\r\n                        {suggestion[3]}\r\n                    </>\r\n                }\r\n\r\n                return (\r\n                    <li key = {suggestion[0]}\r\n                        className    = {className}\r\n                        onClick      = {onClick}\r\n                        onMouseOver  = {onMouseOver}\r\n                        onMouseOut   = {onMouseOut}\r\n\r\n                        data-sindex  = {index}\r\n                        data-id      = {suggestion[0]}\r\n                        data-name    = {suggestion[1]}\r\n                    >\r\n                        {visualisation}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nconst onChoose = ({ foundId, value, setState, setFlyerInput }) => {\r\n    value = value.replace('NEW: ', '')\r\n    if (!value) return\r\n\r\n    setState({\r\n        activeSuggestion:    0,\r\n        showSuggestions:     false,\r\n        filteredSuggestions: [],\r\n        userInput:           value\r\n    })\r\n\r\n    setFlyerInput({ flyerId: foundId, fullname: value })\r\n    return value\r\n}\r\n\r\n\r\n\r\nconst onFocus = e => {\r\n    e.target.select()\r\n}\r\n\r\n\r\nexport const Autocomplete = React.forwardRef( ( {flyersData, initValue, setFlyerInput, ONLY_REGISTRED = false}, ref ) => {\r\n    const [state, setState] = useState({\r\n        activeSuggestion:     0,\r\n        filteredSuggestions: [],\r\n        showSuggestions:  false,\r\n        userInput:        initValue\r\n    })\r\n\r\n    const {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n    } = state\r\n\r\n    const flyersFilter = getFlyersFilter({\r\n        flyersData: flyersData,\r\n        limit: 5\r\n    })\r\n\r\n\r\n\r\n    const onChange  = e => {\r\n        const userInput          = e.currentTarget.value\r\n        const newFlyerSuggestion = ['NEW',\r\n                                    'NEW: ' + userInput,\r\n                                    '', '']\r\n\r\n        const filteredSuggestions = ONLY_REGISTRED\r\n                                  ? [...flyersFilter(userInput)]\r\n                                  : [newFlyerSuggestion, ...flyersFilter(userInput)]\r\n\r\n        setState({\r\n            filteredSuggestions,\r\n            activeSuggestion:     0,\r\n            showSuggestions:      true,\r\n            userInput:            e.currentTarget.value\r\n        })\r\n    }\r\n\r\n\r\n    const onClick   = e => {\r\n        let foundId = Number(e.target.dataset.id) || 'NEW'\r\n        let value   = e.target.dataset.name\r\n        onChoose({ foundId, value, setState, setFlyerInput })\r\n    }\r\n    const onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = state\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault()\r\n            let choice  = filteredSuggestions[activeSuggestion]\r\n            if(!choice) return\r\n            let foundId = Number(choice[0]) || 'NEW'\r\n            let value   = choice[1]\r\n            onChoose({ foundId, value, setState, setFlyerInput })\r\n        }\r\n        // User pressed the up arrow\r\n        else if (e.keyCode === 38) {\r\n            if (activeSuggestion === 0) return\r\n            setState( state => ({...state, activeSuggestion: activeSuggestion - 1 }) )\r\n        }\r\n        // User pressed the down arrow\r\n        else if (e.keyCode === 40) {\r\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n                return\r\n            }\r\n            setState( state => ({...state, activeSuggestion: activeSuggestion + 1 }) )\r\n        }\r\n    }\r\n    const onMouseOver = e => {\r\n        const suggestionIndex = e.target.dataset.sindex\r\n        e.target.className   += \"suggestion-active\"\r\n        setState( state => ({...state, activeSuggestion: +suggestionIndex}) )\r\n    }\r\n    const onMouseOut  = e => {\r\n        e.target.className = e.target.className.replace(\"suggestion-active\", '')\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <Fragment>\r\n        <input ref={ref}\r\n            type       = \"text\"\r\n            spellCheck = {false}\r\n            onFocus    = {onFocus}\r\n            onChange   = {onChange}\r\n            onKeyDown  = {onKeyDown}\r\n            placeholder = {initValue}\r\n            value       = {userInput}\r\n        />\r\n        {\r\n            (showSuggestions && userInput) &&\r\n            <SuggestionsListComponent\r\n                filteredSuggestions = {filteredSuggestions}\r\n                activeSuggestion    = {activeSuggestion}\r\n                onClick             = {onClick}\r\n                onMouseOver         = {onMouseOver}\r\n                onMouseOut          = {onMouseOut}\r\n            />\r\n        }\r\n    </Fragment>\r\n})\r\n\r\nexport default Autocomplete","import './styles.css'\r\n\r\nimport Autocomplete from './Autocomplete'\r\n\r\nexport {Autocomplete}\r\n\r\nexport default Autocomplete\r\n","import { useEffect,\r\n         useState }      from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch, }  from 'react-redux'\r\n\r\nimport { useForm, }      from 'react-hook-form'\r\n\r\n\r\n\r\n\r\nimport {_Date, }         from 'JS/_Date'\r\n\r\nimport { store,\r\n         APP_CONSTANTS,\r\n         SELECTORS, }    from 'index'\r\n\r\nimport { API_ADD_FLYER,} from 'JS/request.mjs'\r\n\r\n\r\nimport { toggleFlyerEditorMD,\r\n         newFlyerDataUPD,\r\n         flyerEditorStateUPD,\r\n         flyerEditorModalUPD, }   from 'JS/store'\r\n\r\nimport Autocomplete               from './Autocomplete'\r\n\r\nconst API_FLYERS_MAP = APP_CONSTANTS.flyersAPI_dataMap\r\n\r\nconst FORM_FIELDS    = ['flyerId', 'fullname', 'lastname', 'firstname', 'secondname', 'email', 'phone', 'catid', 'notes']\r\n\r\nconst DEFAULT_FLYERS_VALS = {\r\n    flyerId: '',\r\n    fullname: '',\r\n    lastname: '',\r\n    firstname: '',\r\n    secondname: '',\r\n    email: '',\r\n    phone: '',\r\n    catid: 0,\r\n    notes: '',\r\n}\r\n\r\nconst CAT_ID_MAP = {\r\n    'Х.З.':    0,\r\n    ПР:        1,\r\n    Спорт:     2,\r\n    Дети:      3,\r\n    Сотрудник: 5,\r\n    Дилер:     6,\r\n    'Иностр.': 9,\r\n}\r\n\r\nconst CAT_ID_OPTIONS = Object.keys(CAT_ID_MAP).map(\r\n    category => <option\r\n                    key   = {CAT_ID_MAP[category]}\r\n                    value = {CAT_ID_MAP[category]}\r\n                >\r\n                    {category}\r\n                </option>\r\n)\r\n\r\n\r\nfunction setupNewFlyer(flyerInput, setValue) {\r\n    setValue('flyerId',  flyerInput.flyerId)\r\n    setValue('fullname', flyerInput.fullname)\r\n\r\n    let flyerInputData = flyerInput.fullname.split(' ')\r\n    let fieldsToSet    = ['lastname', 'firstname', 'secondname']\r\n\r\n    fieldsToSet.forEach(\r\n        (field, index) => {\r\n            const value = flyerInputData[ index ]\r\n            if (value) {\r\n                setValue(field, value)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nfunction setupExistingFlyer(flyersData, flyerInput, setValue) {\r\n    const fieldsSet = ['flyerId', 'catid', 'firstname', 'secondname', 'lastname', 'email', 'phone', 'notes']\r\n    const choosenFlyerData = flyersData.find(\r\n        flyerRec => flyerRec[API_FLYERS_MAP['flyerId']] === flyerInput.flyerId\r\n    )\r\n    for (const field of fieldsSet) {\r\n        const value = choosenFlyerData[ API_FLYERS_MAP[field] ]\r\n        setValue(field, value)\r\n    }\r\n}\r\n\r\nfunction addFlyer(flyerObj) {\r\n    const reqFieldsMap = APP_CONSTANTS.flyersAPI_dataMap\r\n    flyerObj.fullname  = `${flyerObj.lastname} ${flyerObj.firstname}`\r\n                         + (flyerObj.secondname ? ` ${flyerObj.secondname}` : '')\r\n\r\n\r\n    const flyerDataArr = []\r\n    Object.entries(reqFieldsMap).forEach(\r\n        ([fieldName, fieldIndex]) => {\r\n            flyerDataArr[ fieldIndex] = flyerObj[fieldName]\r\n        }\r\n    )\r\n\r\n     console.log('ADD_FLYER: ', JSON.stringify(flyerDataArr))\r\n     return API_ADD_FLYER({flyerData: flyerDataArr})\r\n}\r\n\r\nconst onSubmit = async(flyerObj, e) => {\r\n    store.dispatch(flyerEditorModalUPD('РЕГИСТРАЦИЯ \\n\\n КЛИЕНТА \\n\\n...'))\r\n\r\n    let addFlyerResponse = await addFlyer(flyerObj)\r\n    let newFlyerRecord   = addFlyerResponse.data.record\r\n\r\n    console.log('addFlyerResp: ', flyerObj, newFlyerRecord)\r\n    store.dispatch(newFlyerDataUPD(newFlyerRecord))\r\n    store.dispatch(flyerEditorStateUPD({\r\n        EVENT: 'SUBMITTED',\r\n        flyerId: newFlyerRecord[2],\r\n        fullname: newFlyerRecord[0]\r\n    }))\r\n\r\n    store.dispatch(flyerEditorModalUPD('КЛИЕНТ \\n\\n ЗАРЕГИСТРИРОВАН'))\r\n    await new Promise((resolve) => setTimeout(resolve, 500))\r\n    store.dispatch(flyerEditorModalUPD(''))\r\n\r\n    closeFlyersEditor()\r\n}\r\n\r\nfunction containerClick(e) {\r\n    if( e?.target?.nodeName ===\"HEADER\" ||\r\n        e?.target?.id === 'closeFEDBtn' ) {\r\n            store.dispatch(flyerEditorStateUPD({EVENT: 'CANCELED'}))\r\n            closeFlyersEditor()\r\n    }\r\n}\r\n\r\nfunction closeFlyersEditor() {\r\n    store.dispatch(toggleFlyerEditorMD(false))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function FlyersEditor() {\r\n    const { register,\r\n            formState,\r\n            trigger,\r\n            setValue,\r\n            handleSubmit,\r\n            reset, }       = useForm({ defaultValues: DEFAULT_FLYERS_VALS, mode: 'all' })\r\n\r\n    const dispatch         = useDispatch()\r\n    const flyersData       = useSelector(SELECTORS.flyersDataRaw)\r\n    const flyerEditorState = useSelector(SELECTORS.flyersData_editorState)\r\n    const flyerEditorModal = useSelector(SELECTORS.flyersData_showModal)\r\n\r\n    let [flyerInput, setFlyerInput] = useState({flyerId:'', fullname:''})\r\n\r\n    // init FED\r\n    useEffect( () => {\r\n        if (flyerEditorState?.EVENT !== 'TOSET') return\r\n        if (!flyerEditorState.fullname )         return\r\n\r\n        setupNewFlyer( { flyerId: 'NEW',\r\n                         fullname: flyerEditorState?.fullname },\r\n                       setValue )\r\n\r\n        return () => dispatch( flyerEditorStateUPD({}) )\r\n    }, [dispatch, setValue, flyerEditorState])\r\n\r\n\r\n    useEffect( () => {\r\n        trigger('firstname')\r\n        if (!flyerInput.flyerId) return\r\n        reset()\r\n\r\n        if (flyerInput.flyerId === 'NEW') {\r\n            setupNewFlyer(flyerInput, setValue)\r\n        } else {\r\n            setupExistingFlyer(flyersData, flyerInput, setValue)\r\n        }\r\n    }, [flyerInput, flyersData, setValue, trigger, reset])\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"flyersContainer\"\r\n            className = \"flyersContainer\"\r\n            onClick   = {containerClick}\r\n        >\r\n            <header className=\"flyersForm-header\">\r\n                Данные клиента\r\n                <button id=\"closeFEDBtn\">X</button>\r\n            </header>\r\n\r\n            <form\r\n                noValidate\r\n                id        = \"flyersForm\"\r\n                className = \"flyersForm\"\r\n                onSubmit  = {handleSubmit(onSubmit)}\r\n            >\r\n\r\n                <input type=\"text\" placeholder=\"Id\" disabled {...register(\"flyerId\", {required: true})} />\r\n\r\n\r\n                    {flyerEditorState.fullnameActive &&\r\n                        <label htmlFor=\"autocomplete\">Клиент\r\n                        <Autocomplete\r\n                            {...register(\"fullname\")}\r\n                            flyersData    = { flyersData }\r\n                            setFlyerInput = { setFlyerInput }\r\n                            initValue     = { flyerEditorState?.fullname || '' }\r\n                        />\r\n                        </label>\r\n                    }\r\n                    <label htmlFor=\"lastname\">Фамилия</label>\r\n                    <input type=\"text\" {...register(\"lastname\", {required: true})} />\r\n\r\n                    <label htmlFor=\"firstname\">Имя</label>\r\n                    <input type=\"text\" {...register(\"firstname\", {required: true})} />\r\n\r\n                    <label htmlFor=\"secondname\">Отчество</label>\r\n                    <input type=\"text\" {...register(\"secondname\", {})} />\r\n                <br /><br />\r\n                <label htmlFor=\"catid\">Категория клиента</label>\r\n                <select {...register(\"catid\", {})} >\r\n                        {CAT_ID_OPTIONS}\r\n                </select>\r\n                <label>Контактные данные</label>\r\n                <input type=\"email\" placeholder=\"email\" {...register(\"email\", {})} />\r\n                <input type=\"tel\"   placeholder=\"phone\" {...register(\"phone\", {})} />\r\n\r\n\r\n\r\n                <label htmlFor=\"notes\">Комментарии</label>\r\n                <input type=\"text\" {...register(\"notes\", {})} />\r\n                <br /><br />\r\n\r\n                <button\r\n                    type     = \"submit\"\r\n                    disabled = {!formState.isValid}\r\n                >\r\n                    Записать\r\n                </button>\r\n\r\n                {/* <button onClick={() => trigger(\"phone\")}>\r\n                trigger\r\n                </button> */}\r\n\r\n                {flyerEditorModal &&\r\n                    <div id='flyerEditorModal'>\r\n                        {flyerEditorModal}\r\n                    </div>\r\n                }\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FlyersEditor\r\n","import \"./FlyersEditor.css\"\r\n\r\nimport { FlyersEditor, }   from './FlyersEditor'\r\n\r\nimport { Autocomplete }    from './Autocomplete'\r\n\r\nimport { FLYERS_ED_DATACHECK,\r\n         getFlyersFilter,\r\n         findFlyerData }   from './serv'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    FlyersEditor,\r\n    FLYERS_ED_DATACHECK,\r\n    getFlyersFilter,\r\n    findFlyerData,\r\n    Autocomplete,\r\n}\r\n\r\nexport default FlyersEditor","import { useEffect,\r\n         useState,\r\n         useMemo, }             from 'react'\r\n\r\n\r\nimport { useBus,\r\n         evDispatch, }          from 'Hooks'\r\n\r\nimport { _Date,\r\n         TIME_SLOTS, }          from 'JS/_Date'\r\n\r\nimport { store,\r\n         APP_CONSTANTS,\r\n         bookingsDataToObj, }   from 'index'\r\n\r\nimport { API_CANCEL_BOOKING,\r\n         API_CHANGE_BOOKING,\r\n         API_ADD_BOOKING,\r\n         saveBookings, }        from 'JS/request.mjs'\r\n\r\nimport { toggleSidebarMD,\r\n         bookingEditorModalUPD,\r\n         sidebar_curObjUPD, }   from 'JS/store'\r\n\r\n\r\nexport const PAYMENT_ENUM = [\r\n    '---',\r\n    'Серт.',\r\n    'Инвойс',\r\n    'Резерв',\r\n    'Оплачено',\r\n    'Запрос',\r\n]\r\n\r\nexport const TARIF_MAP = {\r\n      1: 'ПР Серт',\r\n     10: 'ПР 1.5',\r\n     20: 'ПР -20%',\r\n     30: 'ПР',\r\n     40: 'Школа',\r\n     50: 'Промо',\r\n     60: 'Бл-ть',\r\n     70: 'Стафф',\r\n    100: 'Спорт',\r\n    150: 'Sport',\r\n    200: 'Other',\r\n}\r\n\r\n\r\nexport function GET_INITIAL_VALUES(valuesPassed = {}, defaultValues = {}) {\r\n    const time = valuesPassed.time || Date.now()\r\n    const submitOptions = valuesPassed.submitOptions || null\r\n    const sumbitChoice = valuesPassed.sumbitChoice || ''\r\n    const resultObj = {\r\n        ...defaultValues,\r\n        ...valuesPassed,\r\n        time,\r\n        submitOptions,\r\n        sumbitChoice\r\n    };\r\n    return resultObj\r\n}\r\n\r\nexport function getFromWatchedMainVals(values, name, namesArr) {\r\n    return values[namesArr.indexOf(name)]\r\n}\r\n\r\nexport function parseDateTime(dateTime) {\r\n    const RecDate     = new Date(dateTime || Date.now())\r\n    const TimeSlotN   = _Date.msToSlotN(dateTime)\r\n    const Flight_Date = RecDate.toISOString().substring(0, 10)\r\n    const TimeSlot    = TIME_SLOTS[TimeSlotN]?.[2]\r\n    const dateTimeStr = `${Flight_Date} ${TimeSlot}`\r\n\r\n    return { Flight_Date, TimeSlot, dateTimeStr }\r\n}\r\n\r\nexport function codeDateTime(date, slot = '00:00') {\r\n    let dateR    = new Date(date)\r\n    let [hh, mm] = slot.split(':')\r\n    let time     = dateR.setUTCHours(Number(hh), Number(mm), 0, 0)\r\n\r\n    return time\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function handleWatch({ values, watchedFields, initialValues, setValue }) {\r\n    const changedValues = watchedFields.reduce(\r\n        (acc, field, index) => (\r\n            values[index] === initialValues[field] ?\r\n                acc :\r\n                { ...acc, [field]: values[index] }\r\n        ),\r\n        {}\r\n    )\r\n    const isChanged = !!Object.entries(changedValues).length\r\n    let submitOptions = initialValues.submitOptions ?\r\n        initialValues.submitOptions :\r\n        isChanged ?\r\n            {\r\n                toChange: !changedValues.time,\r\n                toMove: !!changedValues.time,\r\n                toNew: true\r\n            }\r\n            : { toCancel: true }\r\n    setValue('submitOptions', submitOptions)\r\n\r\n    if (!isChanged && !submitOptions.toMove ) { return }\r\n    setValue('sumbitChanges', changedValues)\r\n}\r\n\r\nexport function handleWatchLight({ values, watchedFields, initialValues, setValue }) {\r\n    const changedValues = watchedFields.reduce(\r\n        (acc, field, index) => (\r\n            values[index] === initialValues[field] ?\r\n                acc :\r\n                { ...acc, [field]: values[index] }\r\n        ),\r\n        {}\r\n    )\r\n    const isChanged   = !!Object.entries(changedValues).length\r\n    let submitOptions = initialValues.bookingId\r\n        ? { toCancel: true,\r\n            toNew   : true, }\r\n        : initialValues.submitOptions\r\n        // ? initialValues.submitOptions\r\n        // : isChanged ?\r\n        //     {\r\n        //         toChange: false,// !changedValues.time,\r\n        //         toMove:   false,//!!changedValues.time,\r\n        //         toNew:    true\r\n        //     }\r\n        //     : { toCancel: false,\r\n        //         toChange: false,// !changedValues.time,\r\n        //         toMove:   false,}//!!changedValues.time,}//true }\r\n    setValue('submitOptions', submitOptions)\r\n\r\n    if (!isChanged) return\r\n\r\n    setValue('sumbitChanges', changedValues)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const useUpdateValues = ({ valuesPassed, dispatch, setValue, getValues }) => {\r\n    useEffect(() => {\r\n        if (valuesPassed?.type !== 'UPDATE') return\r\n        const currentValues = getValues()\r\n        const changesArr = Object.entries(valuesPassed).filter(\r\n            field => field[1] !== currentValues[field[0]]\r\n        )\r\n        // console.log('PASSED_VALS: ', valuesPassed)\r\n        // console.log('PROCEEDED_VALS: ', changesArr)\r\n        changesArr.forEach(\r\n            field => {\r\n                setValue(field[0], field[1], { shouldDirty: true })\r\n            }\r\n        )\r\n    }, [valuesPassed, dispatch, setValue, getValues])\r\n}\r\n\r\nexport const useSetInitialValues = (valuesPassed, getInitialValues, defaultValues) => {\r\n    const [_initialValuesPassed, set_initialValuesPassed] = useState(valuesPassed)\r\n\r\n    useEffect(() => {\r\n        const passedValuesType = valuesPassed?.type ?? 'INIT'\r\n        if (passedValuesType === 'INIT') {\r\n            set_initialValuesPassed(valuesPassed)\r\n        }\r\n    }, [valuesPassed])\r\n\r\n    let initialValues = useMemo(\r\n        () => getInitialValues(_initialValuesPassed, defaultValues),\r\n        [_initialValuesPassed, getInitialValues, defaultValues]\r\n    )\r\n\r\n    return initialValues\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const onSubmit = async (data) => {\r\n    store.dispatch(bookingEditorModalUPD('ОТПРАВКА ЗАПРОСА \\n\\n НА СЕРВЕР \\n\\n ...'))\r\n    let autoClose  = false\r\n    let postAction = null\r\n    let apiResponse\r\n\r\n    const { sumbitChoice } = data\r\n    const instrMode        = (data.status === 'Запрос')\r\n    //debugger\r\n    console.log('SUBMIT', data)\r\n    data.sumbitChoice  = ''\r\n    data.submitOptions = ''\r\n    store.dispatch(sidebar_curObjUPD(data))\r\n\r\n    if (sumbitChoice === 'toCancel') {\r\n        apiResponse = await cancelBooking(data.bookingId, instrMode)\r\n        autoClose   = true\r\n    }\r\n\r\n    if (sumbitChoice === 'toChange') {\r\n        apiResponse = await changeBooking(data, instrMode)\r\n    }\r\n\r\n    if (sumbitChoice === 'toMove') {\r\n        data = data.sumbitChanges.time\r\n                ? data\r\n                : { ...data, sumbitChanges: {time: data.time} }\r\n\r\n        apiResponse = await changeBooking(data, instrMode)\r\n    }\r\n\r\n    if (sumbitChoice === 'toNew') {\r\n        postAction = (bookingsData) => {\r\n\r\n            // !!! Works only if shure that new id will be last in data array !!!\r\n            const targetCI     = APP_CONSTANTS.bookingsAPIDataMap['bookingIdCI']\r\n            const newBookingId = bookingsData.slice(-1)[0][targetCI]\r\n            evDispatch({type: '@@ui/EDIT_BOOKING_CALL', payload: newBookingId})\r\n        }\r\n        apiResponse = await addBooking(data, instrMode)\r\n    }\r\n\r\n    let noLS         = true\r\n    let messageDelay = 500\r\n    let bookingsObj  = {}\r\n    let bookingsData = apiResponse\r\n\r\n\r\n    if (bookingsData.status === 'OK') {\r\n        store.dispatch(bookingEditorModalUPD('УСПЕШНО!'))\r\n        bookingsData = bookingsData.data\r\n        bookingsObj  = bookingsDataToObj(bookingsData)\r\n\r\n        saveBookings(bookingsObj, noLS)\r\n\r\n        if (postAction) {\r\n            postAction(bookingsData)\r\n        }\r\n    } else {\r\n        messageDelay = 3000\r\n        store.dispatch(bookingEditorModalUPD(\r\n            `ОШИБКА! \\n\r\n            ${apiResponse.status} \\n\r\n            ${JSON.stringify(apiResponse.data.content)}`\r\n        ));\r\n    }\r\n    await new Promise((resolve) => setTimeout(resolve, messageDelay))\r\n    store.dispatch(bookingEditorModalUPD(''))\r\n    if (autoClose) { closeSidebar() }\r\n}\r\n\r\n\r\n\r\nasync function cancelBooking(bookingId) {\r\n    return API_CANCEL_BOOKING({ bookingId: bookingId })\r\n}\r\n\r\n\r\nasync function changeBooking(bookingObj) {\r\n    let { bookingId, sumbitChanges } = bookingObj\r\n\r\n    if ('flyerId' in sumbitChanges) {\r\n        const { email, fullname, phone } = bookingObj\r\n        sumbitChanges = { ...sumbitChanges, email, fullname, phone }\r\n    }\r\n\r\n    if ('time' in sumbitChanges) {\r\n        const {dateTimeStr} = parseDateTime(bookingObj.time)\r\n        sumbitChanges = { ...sumbitChanges, dateTimeStr }\r\n    }\r\n\r\n    const changes = Array.from(Object.entries(sumbitChanges))\r\n\r\n    console.log('CHANGE: ', bookingId, changes)\r\n    return API_CHANGE_BOOKING({ bookingId, changes })\r\n}\r\n\r\n\r\nasync function addBooking(bookingObj, instrMode = false) {\r\n    const reqFieldsMap  = APP_CONSTANTS.bookingsAPIDataMap\r\n    const {dateTimeStr} = parseDateTime(bookingObj.time)\r\n\r\n    const bookingDataArr = []\r\n    Object.entries(reqFieldsMap).forEach(\r\n        ([fieldName, fieldIndex]) => {\r\n            bookingDataArr[fieldIndex] = bookingObj[fieldName.replace('CI', '')]\r\n        }\r\n    )\r\n\r\n    bookingDataArr[reqFieldsMap.timeCI] = dateTimeStr\r\n\r\n    console.log('ADD: ', JSON.stringify(bookingDataArr))\r\n    return API_ADD_BOOKING({ bookingData: bookingDataArr,\r\n                             instrMode })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function closeSidebar() {\r\n    store.dispatch(toggleSidebarMD(false));\r\n    store.dispatch(sidebar_curObjUPD(GET_INITIAL_VALUES()))\r\n}\r\n\r\nexport function onKeyDown(e) {\r\n    if (e.key === 'Escape') {\r\n        closeSidebar()\r\n    }\r\n}\r\n","import { useWatch } from \"react-hook-form\"\r\n\r\nexport function SubmitBlock({ control, setValue, formState, buttonsText }) {\r\n    const submitOptions = useWatch({\r\n        control,\r\n        name: 'submitOptions'\r\n    }) || {}\r\n\r\n    const { isDirty, isValid } = formState\r\n    //debugger\r\n    console.log('SMBLOCK: ', submitOptions, isDirty, isValid)\r\n\r\n    const onClick = e => setValue('sumbitChoice', e.target.name)\r\n\r\n    const SubmitButtons = Object.entries(submitOptions).map(\r\n        ([option, isSet]) => isSet &&\r\n            <button disabled={!isValid}\r\n                type='submit'\r\n                key={option}\r\n                name={option}\r\n                onClick={onClick}\r\n            >\r\n                {buttonsText[option]}\r\n            </button>\r\n    );\r\n\r\n    return <div id=\"SubmitBlock\">\r\n        {/* {renderCnt}<br /> */}\r\n        {SubmitButtons}\r\n    </div>\r\n}\r\n\r\n\r\nexport function NEW_SubmitBlock({ submitOptions = {}, clickHandler, formState, buttonsText }) {\r\n    const { isDirty, isValid } = formState;\r\n    //debugger\r\n    console.log('SMBLOCK: ', submitOptions, isDirty, isValid);\r\n\r\n    const SubmitButtons = Object.entries(submitOptions).map(\r\n        ([option, isSet]) => isSet &&\r\n            <button disabled={!isValid}\r\n                type='submit'\r\n                key={option}\r\n                name={option}\r\n                onClick={clickHandler}\r\n            >\r\n                {buttonsText[option]}\r\n            </button>\r\n    );\r\n\r\n    return <div id=\"SubmitBlock\">\r\n        {/* {renderCnt}<br /> */}\r\n        {SubmitButtons}\r\n    </div>;\r\n}","import { forwardRef,\r\n         useState, }        from 'react'\r\nimport { TIME_SLOTS }       from 'JS/_Date'\r\nimport { codeDateTime,\r\n         parseDateTime, }   from './bedHelpers'\r\n\r\n\r\n\r\n\r\nexport const DateTimeInput = forwardRef(({ time, name, controls }, ref) => {\r\n    const { setValue } = controls\r\n    let dateSlotObj    = parseDateTime(time)\r\n//debugger\r\n console.log(dateSlotObj)\r\n    const onChangeLocal = (e) => {\r\n        const changedField = e.target.name\r\n        const changedValue = e.target.value\r\n        dateSlotObj[changedField] = changedValue\r\n\r\n        let newTime = codeDateTime(dateSlotObj.Flight_Date, dateSlotObj.TimeSlot)\r\n        setValue(name, newTime)\r\n    }\r\n\r\n    return <>\r\n        <label>Дата и время полёта</label>\r\n        <div className=\"side-form__inlineWrapper\">\r\n            <input\r\n                type=\"date\"\r\n                name=\"Flight_Date\"\r\n                placeholder=\"Flight_Date\"\r\n                value={dateSlotObj.Flight_Date}\r\n                onChange={onChangeLocal} />\r\n\r\n            <select\r\n                name=\"TimeSlot\"\r\n                className='timeslot'\r\n                value={dateSlotObj.TimeSlot}\r\n                onChange={onChangeLocal}\r\n            >\r\n                {TIME_SLOTS.map((slot, i) => (\r\n                    <option key={i} value={slot[2]}>{slot[2]}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    </>\r\n})\r\n","export function StepInputButton({ controls, inputName, step, min, max, children }) {\r\n    const { getValues, setValue, trigger } = controls\r\n    const className = step > 0\r\n        ? 'stepInputButton'\r\n        : 'stepInputButton stepInputButton--bottom'\r\n    const text = children || step > 0 ? '+' : '-'\r\n\r\n    const stepAction = (e) => {\r\n        const newValue = getValues(inputName) + step\r\n\r\n        if (min && newValue < min) return\r\n        if (max && newValue > max) return\r\n\r\n        setValue(inputName, newValue)\r\n        trigger(inputName)\r\n    }\r\n\r\n    return <>\r\n        <button\r\n            type      = \"button\"\r\n            className = {className}\r\n            onClick   = {stepAction}\r\n        >\r\n            {text}\r\n        </button>\r\n    </>\r\n}\r\nexport function QuickInputBlock({ controls, inputName }) {\r\n    const { setValue, trigger } = controls\r\n    const className = 'quickInputBlock'\r\n    const values    = [5, 10, 15, 30]\r\n\r\n    const quickAction = (e) => {\r\n        const value = e.target.dataset.value\r\n        setValue(inputName, value)\r\n        trigger(inputName)\r\n    }\r\n\r\n    return <div className={className}>\r\n        {values.map(value => (\r\n            <button\r\n                key        = {value}\r\n                type       = \"button\"\r\n                data-value = {value}\r\n                onClick    = {quickAction}\r\n                className  = {className + '-button'}\r\n            >\r\n                {value}\r\n            </button>\r\n        ))}\r\n    </div>\r\n}\r\n\r\nexport function TimeValInput({ getValues, setValue, trigger, register }) {\r\n    return <>\r\n        <label>\r\n            Минуты\r\n            <StepInputButton\r\n                controls  = {{ getValues, setValue, trigger }}\r\n                inputName = {'timeVal'}\r\n                step      = {+1} />\r\n\r\n            <input\r\n                {...register(\"timeVal\", {\r\n                        required:      true,\r\n                        valueAsNumber: true,\r\n                        min:           1 } )}\r\n                type    = \"number\"\r\n                min     = \"0\"\r\n                onFocus = {e => e.target.select()}\r\n            />\r\n\r\n            <StepInputButton\r\n                controls  = {{ getValues, setValue, trigger }}\r\n                inputName = {'timeVal'}\r\n                step      = {-1}\r\n                min       = {1} />\r\n        </label>\r\n\r\n        <QuickInputBlock\r\n            controls  = {{ setValue, trigger }}\r\n            inputName = {'timeVal'}\r\n        />\r\n    </>\r\n}\r\n","\r\nimport { PAYMENT_ENUM,\r\n         TARIF_MAP,\r\n         onKeyDown,\r\n         closeSidebar,\r\n         onSubmit, }       from './bedHelpers'\r\n\r\nimport { Autocomplete }    from '../FlyersEditor'\r\n\r\nimport { SubmitBlock }     from './SubmitBlock'\r\nimport { DateTimeInput }   from './DateTimeInput'\r\nimport { TimeValInput }    from './TimeValInput'\r\n\r\n\r\n\r\nexport function BookingEditorBaseForm({ formProps }) {\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        getValues,\r\n        setValue,\r\n        trigger,\r\n        control,\r\n        formState,\r\n\r\n        setFlyerInput,\r\n        SUBMIT_BUTTONS_TEXT,\r\n        time,\r\n        flyersData,\r\n        flyerInput,\r\n        bookingEditorModal,\r\n    } = formProps\r\n\r\n    return (\r\n        <div id=\"sidebar\"\r\n            className = \"sidebar\"\r\n            onKeyDown = {onKeyDown}\r\n            tabIndex  = \"0\"\r\n        >\r\n            <header className=\"sidebar-header\">\r\n                Бронирование\r\n                <button id=\"closeSidebarBtn\" onClick={closeSidebar}>X</button>\r\n            </header>\r\n\r\n\r\n\r\n            <form\r\n                noValidate\r\n                className = \"side-form\"\r\n                onSubmit  = {handleSubmit(onSubmit)}\r\n            >\r\n                <div id=\"bookingIdDiv\" className=\"side-form__inlineWrapper\">\r\n                    <label id=\"bookingId-label\">ID: </label>\r\n                    <input {...register(\"bookingId\")}\r\n                        disabled\r\n                        type        = \"number\"\r\n                        placeholder = \" NEW\"\r\n                    />\r\n                </div>\r\n\r\n                <DateTimeInput\r\n                    {...register(\"time\", { required: true })}\r\n                    controls={{ setValue }}\r\n                    time={time}\r\n                />\r\n\r\n                <div className=\"side-form__inlineWrapper\">\r\n                    <TimeValInput\r\n                        register  = {register}\r\n                        getValues = {getValues}\r\n                        setValue  = {setValue}\r\n                        trigger   = {trigger}\r\n                    />\r\n\r\n                    <label>\r\n                        Тариф\r\n                        <select {...register(\"tarif\", { required: true })}>\r\n                            {Object.entries(TARIF_MAP).map((tarif) => {\r\n                                const tarifName = tarif[1]\r\n                                const tarifId   = tarif[0]\r\n                                return <option key={tarifId} value={tarifName}>{tarifName}</option>\r\n                            })}\r\n                        </select>\r\n                        Оплата\r\n                        <select {...register(\"status\")}>\r\n                            {PAYMENT_ENUM.map((option, i) => (\r\n                                <option key={i} value={option}>{option}</option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <label id=\"fullnameLabel\" htmlFor=\"fullname\">Клиент</label>\r\n                <Autocomplete {...register(\"fullname\", { required: true })}\r\n                    key           = {flyerInput.fullname}\r\n                    initValue     = {flyerInput.fullname}\r\n                    flyersData    = {flyersData}\r\n                    setFlyerInput = {setFlyerInput}\r\n                />\r\n\r\n\r\n                <label htmlFor=\"notes\">Комментарии</label>\r\n                <input type=\"text\" {...register(\"notes\", { required: false })} />\r\n\r\n\r\n                <SubmitBlock\r\n                    control     = {control}\r\n                    setValue    = {setValue}\r\n                    getValues   = {getValues}\r\n                    formState   = {formState}\r\n                    buttonsText = {SUBMIT_BUTTONS_TEXT}\r\n                />\r\n            </form>\r\n\r\n            {bookingEditorModal &&\r\n                <div id='bookingEditorModal'>\r\n                    {bookingEditorModal}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n    <TestButton\r\n        renderCnt={renderCnt}\r\n        valuesPassed={valuesPassed}\r\n        time={time}\r\n        // timeChange={timeChange}\r\n        getValues={getValues}\r\n    />\r\n*/\r\n\r\n// function TestButton(props) {\r\n//     let {\r\n//         renderCnt,\r\n//         valuesPassed,\r\n//         time,\r\n//         timeChange,\r\n\r\n//         getValues,\r\n//     } = props\r\n//     const {Flight_Date, TimeSlot} = parseDateTime(time)\r\n//     return <button type=\"button\" style={{\"height\" : \"fit-content\"}}\r\n//         onClick={() => {\r\n//             //debugger\r\n//             console.log(valuesPassed, time)\r\n//             // reset(getValues())\r\n//         }}\r\n//     >\r\n//         TEST {renderCnt} timeInput: {getValues('time')}\r\n//         <br />\r\n//         {time}<br />\r\n//         {Flight_Date}/{TimeSlot}\r\n\r\n//     </button>\r\n// }","import { useEffect,\r\n         useState,\r\n         useRef,\r\n         useMemo, }             from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch,\r\n         shallowEqual, }        from 'react-redux'\r\n\r\nimport { useForm, }             from 'react-hook-form'\r\n\r\nimport { SELECTORS,}            from 'index'\r\n\r\nimport { toggleFlyerEditorMD,\r\n         flyerEditorStateUPD,\r\n         sidebar_viewTimeUPD, } from 'JS/store'\r\n\r\n\r\nimport {_Date,\r\n         TIME_SLOTS }           from \"JS/_Date\"\r\n\r\n\r\n\r\nimport { findFlyerData,\r\n         FLYERS_ED_DATACHECK, } from '../FlyersEditor'\r\n\r\n\r\nimport { GET_INITIAL_VALUES,\r\n         getFromWatchedMainVals,\r\n\r\n       useUpdateValues,\r\n       useSetInitialValues,\r\n\r\n         handleWatch }          from './bedHelpers'\r\n\r\nimport { BookingEditorBaseForm }from './BookingEditorBaseForm'\r\n\r\n\r\n\r\nexport const SUBMIT_BUTTONS_TEXT = {\r\n    toCancel : 'Отменить бронирование',\r\n    toMove   : 'Перенести бронирование',\r\n    toChange : 'Изменить бронирование',\r\n    toNew    : 'Записать как новое'\r\n}\r\n\r\nconst DEFAULT_BOOKING_VALS = {\r\n    bookingId: '',\r\n    history:   '',\r\n    time:      0,\r\n    timeVal:   0,\r\n    tarif:     'ПР',\r\n    fullname:  '',\r\n    notes:     '',\r\n    status:    '---',\r\n    flyerId:   0,\r\n    email:     '',\r\n    phone:     '',\r\n}\r\n\r\nconst MAIN_WATCHED_FIELDS = ['bookingId', 'flyerId', 'time', 'timeVal', 'tarif', 'status', 'notes']\r\n\r\n\r\nconst useFlyersDataUpd = ({\r\n    dispatch, setValue, trigger,\r\n    flyerEditorState, flyersData, flyerInput, setFlyerInput\r\n}) => {\r\n\r\n    useEffect( () => {\r\n        const { EVENT, flyerId, fullname } = flyerEditorState\r\n        if (EVENT === 'SUBMITTED') {\r\n            setFlyerInput({ flyerId, fullname })\r\n            return\r\n        }\r\n    }, [dispatch, setValue, setFlyerInput, flyerEditorState])\r\n\r\n\r\n    useEffect( () => {\r\n        if ( !FLYERS_ED_DATACHECK.flyersData(flyersData) ) return\r\n        const flyerId = flyerInput.flyerId\r\n        if (flyerId === 'TOSET') return\r\n\r\n        if (flyerId === 'NEW') {\r\n            setFlyerInput({ flyerId:  'TOSET'})//, fullname: ''})//flyerInput.fullname})\r\n            dispatch( flyerEditorStateUPD({\r\n                EVENT: 'TOSET',\r\n                fullnameImputActive: false,\r\n                fullname: flyerInput.fullname,\r\n            }) )\r\n            dispatch( toggleFlyerEditorMD(true) )\r\n            return\r\n        }\r\n        if ( !FLYERS_ED_DATACHECK.flyerId(flyerId) ) return\r\n\r\n        const flyerData = findFlyerData({flyerId, flyersData})\r\n        flyerData.forEach(\r\n            field => setValue(field[0], field[1])\r\n        )\r\n        trigger('fullname')\r\n    }, [dispatch, setValue, trigger, flyersData, flyerInput, setFlyerInput])\r\n}//end useFlyersDataUpd\r\n\r\n\r\n\r\n\r\nfunction BookingEditor() {\r\n    // const renderCnt          = useRendersCount()\r\n    const dispatch           = useDispatch()\r\n    const flyersData         = useSelector(SELECTORS.flyersDataRaw)\r\n    const flyerEditorState   = useSelector(SELECTORS.flyersData_editorState)\r\n    const valuesPassed       = useSelector(SELECTORS.sidebar_curObj)\r\n    const initialValues      = useSetInitialValues( valuesPassed,\r\n                                                    GET_INITIAL_VALUES,\r\n                                                    DEFAULT_BOOKING_VALS )\r\n    const bookingEditorModal = useSelector(SELECTORS.booking_showModal)\r\n\r\n    const { register,\r\n        control,\r\n        trigger,\r\n        setValue,\r\n        getValues,\r\n        watch,\r\n        handleSubmit,\r\n        formState, }      = useForm({defaultValues: initialValues, mode: 'all'})\r\n\r\n    const [flyerInput,\r\n           setFlyerInput] = useState({ flyerId:  initialValues.flyerId,\r\n                                       fullname: initialValues.fullname })\r\n\r\n    register('flyerId', { validate: value => value !== 'TOSET' })\r\n\r\n    useFlyersDataUpd({ dispatch, trigger, setValue, setFlyerInput,\r\n                       flyerEditorState, flyersData, flyerInput })\r\n\r\n\r\n    const watchedMainValues = watch(MAIN_WATCHED_FIELDS)\r\n    const time              = getFromWatchedMainVals(watchedMainValues, 'time', MAIN_WATCHED_FIELDS)\r\n\r\n    useUpdateValues({ valuesPassed, dispatch, setValue, getValues, })\r\n\r\n    useEffect(() => {\r\n        dispatch( sidebar_viewTimeUPD(time) )\r\n        return () => dispatch(sidebar_viewTimeUPD(null))\r\n    }, [dispatch, time,])\r\n\r\n\r\n    useEffect(() => {\r\n        handleWatch({\r\n            values       : watchedMainValues,\r\n            watchedFields: MAIN_WATCHED_FIELDS,\r\n            initialValues,\r\n            setValue,\r\n        })\r\n    }, [watchedMainValues, initialValues, setValue])\r\n\r\n\r\n    console.log('BER RENDER', initialValues, getValues())\r\n    // formState.errors && console.warn('BER RENDER BF ERRORS', formState.errors)//, getValues('submitOptions'))\r\n    const formProps = {\r\n        handleSubmit,\r\n        register,\r\n        getValues,\r\n        setValue,\r\n        trigger,\r\n        control,\r\n        formState,\r\n\r\n        setFlyerInput,\r\n        SUBMIT_BUTTONS_TEXT,\r\n        time,\r\n        flyersData,\r\n        flyerInput,\r\n        bookingEditorModal,\r\n    }\r\n\r\n    return <BookingEditorBaseForm\r\n        formProps={formProps}\r\n    />\r\n}\r\n\r\nexport default BookingEditor\r\n","import \"./BookingEditor.css\"\r\n\r\nimport BookingEditor      from \"./BookingEditor\"\r\nimport BookingEditorLight from \"./BookingEditorLight\"\r\n\r\nexport default BookingEditor\r\nexport  {\r\n    BookingEditor,\r\n    BookingEditorLight\r\n}","import { useEffect,\r\n         useState,\r\n         useRef, }              from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch, }         from 'react-redux'\r\n\r\nimport { useForm, }             from 'react-hook-form'\r\n\r\nimport { SELECTORS,}            from 'index'\r\n\r\nimport { sidebar_viewTimeUPD, } from 'JS/store'\r\n\r\n\r\nimport { _Date, }               from 'JS/_Date'\r\n\r\nimport { findFlyerData,\r\n         FLYERS_ED_DATACHECK, } from '../FlyersEditor'\r\n\r\n\r\n\r\n\r\nimport { GET_INITIAL_VALUES,\r\n         getFromWatchedMainVals,\r\n         parseDateTime,\r\n\r\n         handleWatchLight,\r\n         useUpdateValues,\r\n         useSetInitialValues, } from './bedHelpers'\r\n\r\nimport { BookingEditorBaseForm }from './BookingEditorBaseForm'\r\n\r\n\r\n\r\n\r\nconst SUBMIT_BUTTONS_TEXT = {\r\n    toCancel : 'Запрос на отмену',\r\n    toMove   : 'Запрос на перенос',\r\n    toChange : 'Запрос на измену',\r\n    toNew    : 'Запрос на новое'\r\n}\r\n\r\nconst DEFAULT_BOOKING_VALS = {\r\n    bookingId: '',\r\n    history:   '',\r\n    time:      0,\r\n    timeVal:   15,\r\n    tarif:     'Спорт',\r\n    fullname:  '',\r\n    notes:     '',\r\n    status:    'Запрос',\r\n    flyerId:   0,\r\n    email:     '',\r\n    phone:     '',\r\n}\r\n\r\n\r\nconst MAIN_WATCHED_FIELDS = ['bookingId', 'flyerId', 'time', 'timeVal', 'tarif', 'status', 'notes']\r\n\r\nconst GET_INITIAL_VALUES_LIGHTMODE = (valuesPassed, defaultValues) => {\r\n    let lightSet = GET_INITIAL_VALUES(valuesPassed, defaultValues)\r\n    let debugSlot = parseDateTime(lightSet.time)\r\n    lightSet.submitOptions = {toNew: true}\r\n    return lightSet\r\n}\r\n\r\n\r\nconst useFlyersDataUpd = ({ dispatch, setValue, trigger, flyersData, flyerInput }) => {\r\n    useEffect(() => {\r\n\r\n        const flyerId = flyerInput.flyerId\r\n        if ( flyerId === 'TOSET')                          return\r\n        if ( !FLYERS_ED_DATACHECK.flyerId(flyerId) )       return\r\n        if ( !FLYERS_ED_DATACHECK.flyersData(flyersData) ) return\r\n\r\n        const flyerData = findFlyerData({ flyerId, flyersData })\r\n        flyerData.forEach(\r\n            field => setValue(field[0], field[1])\r\n        )\r\n        trigger('fullname')\r\n\r\n    }, [dispatch, setValue, trigger, flyersData, flyerInput])\r\n}\r\n\r\n\r\n\r\n\r\nfunction BookingEditorLight() {\r\n    // const renderCnt          = useRendersCount()\r\n    const dispatch           = useDispatch()\r\n    const flyersData         = useSelector(SELECTORS.flyersDataRaw)\r\n\r\n    const valuesPassed       = useSelector(SELECTORS.sidebar_curObj)\r\n    const initialValues      = useSetInitialValues( valuesPassed,\r\n                                                    GET_INITIAL_VALUES_LIGHTMODE,\r\n                                                    DEFAULT_BOOKING_VALS )\r\n    const bookingEditorModal = useSelector(SELECTORS.booking_showModal)\r\n\r\n    const { register,\r\n            control,\r\n            trigger,\r\n            setValue,\r\n            getValues,\r\n            watch,\r\n            handleSubmit,\r\n            formState, }  = useForm({defaultValues: initialValues, mode: 'all'})\r\n\r\n    const [flyerInput,\r\n           setFlyerInput] = useState({ flyerId:  initialValues.flyerId,\r\n                                       fullname: initialValues.fullname })\r\n\r\n    register('flyerId', { validate: value => value !== 'TOSET' })\r\n\r\n    const watchedMainValues = watch(MAIN_WATCHED_FIELDS)\r\n    const time              = getFromWatchedMainVals(watchedMainValues, 'time', MAIN_WATCHED_FIELDS)\r\n\r\n\r\n    useUpdateValues({ valuesPassed, dispatch, setValue, getValues, })\r\n\r\n    useFlyersDataUpd({ flyersData, flyerInput, dispatch, setValue, trigger, })\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch( sidebar_viewTimeUPD(time) )\r\n        return () => dispatch(sidebar_viewTimeUPD(null))\r\n    }, [dispatch, time,])\r\n\r\n\r\n    useEffect(() => {\r\n        handleWatchLight({\r\n            values       : watchedMainValues,\r\n            watchedFields: MAIN_WATCHED_FIELDS,\r\n            initialValues,\r\n            setValue,\r\n        })\r\n    }, [watchedMainValues, initialValues, setValue])\r\n\r\n\r\n    const formProps = {\r\n        handleSubmit,\r\n        register,\r\n        getValues,\r\n        setValue,\r\n        trigger,\r\n        control,\r\n        formState,\r\n\r\n        setFlyerInput,\r\n        SUBMIT_BUTTONS_TEXT,\r\n        time,\r\n        flyersData,\r\n        flyerInput,\r\n        bookingEditorModal,\r\n    }\r\n\r\n    return <BookingEditorBaseForm\r\n        formProps={formProps}\r\n    />\r\n}\r\n\r\n\r\nexport default BookingEditorLight\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//TESTING\r\n\r\n// let debugValues = {flyerInput, initialValues, submitOptions: getValues('submitOptions')}\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const subscription = watch((value, { name, type }) => console.log('WATCHED_CB', value, name, type));\r\n    //     return () => subscription.unsubscribe();\r\n    //   }, [watch]);\r\n\r\n\r\n    // console.log('BER RENDER', initialValues, getValues())\r\n    // formState.errors && console.warn('BER RENDER BF ERRORS', formState.errors)//, getValues('submitOptions'))\r\n\r\n\r\n\r\n","/* eslint eqeqeq: \"off\", curly: \"error\" */\r\nimport { useState }               from 'react'\r\n\r\nimport { useSelector,\r\n         useDispatch,\r\n         shallowEqual, }          from 'react-redux'\r\nimport { setBasepath,\r\n         useRoutes,\r\n         navigate,\r\n         useRedirect }            from 'hookrouter'\r\n\r\nimport { useBus,\r\n         evDispatch }             from 'Hooks'\r\n\r\nimport { APP_CONSTANTS,\r\n         store,\r\n         toggleSidebarMD,\r\n         sidebar_curObjUPD,\r\n         toggleFlyerEditorMD,\r\n         bTableDateUPD,\r\n         SELECTORS }              from 'JS/store.js'\r\n\r\nimport { getFlyersData,\r\n         getLastUpdate,\r\n         _Date }                  from 'index'\r\n\r\n\r\nimport BottomBar                    from 'Сomponents/Bars/BottomBar.jsx'\r\nimport TopBar                       from 'Сomponents/Bars/TopBar.jsx'\r\n\r\nimport BookingsTable                from 'Сomponents/BookingsTable'\r\nimport FreetimeTable                from 'Сomponents/FreetimeTable'\r\n\r\nimport LoginForm                    from 'Сomponents/Login'\r\nimport FlyersEditor                 from 'Сomponents/FlyersEditor'\r\nimport BookingEditor, {\r\n         BookingEditorLight,\r\n         GET_DEFAULT_BOOKING_VALS,} from 'Сomponents/BookingEditor'\r\n\r\nimport {FetchComponent, FetchComponent2}  from '../JS/testing.js'\r\n\r\nsetBasepath(APP_CONSTANTS.BASE_PATH)\r\n\r\nconst routes = {\r\n    '*bookings': () => ({mode: 'bookings', Content: BookingsTable}),\r\n    '*freetime': () => ({mode: 'freetime', Content: FreetimeTable}),\r\n    '*login':    () => ({mode: 'login',    Content: LoginForm}),\r\n\r\n    'default':   () => ({mode: 'bookings', Content: BookingsTable}),\r\n}\r\n\r\n// const USER = SELECTORS.userObj( store.getState() )\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    useRedirect('/*', '/bookings')\r\n\r\n    const USER           = useSelector(SELECTORS.userObj)\r\n    if (!USER.role)      { navigate('/login') }\r\n    const ADMIN_TOGGLE   = USER.role === 'admin'\r\n\r\n    const {mode, Content}   = useRoutes(routes) || routes.default()\r\n\r\n    const sidebar_isToggled     = useSelector(SELECTORS.sidebar_isToggled)\r\n    const flyersData_showEditor = useSelector(SELECTORS.flyersData_showEditor)\r\n\r\n    const [sidebarKey, setSidebarKey] = useState(0)\r\n\r\n    useBus(\r\n        '@@ui/ADDREC_BTN',\r\n        (e) => {\r\n            let TR0           = findTR0node(e.payload)\r\n            let [dayN, slot]  = TR0.id.split('_')\r\n            let [hours, mins] = slot.split(':')\r\n            let  time         = dayN * 86400000 + (+mins +hours*60)*60000\r\n\r\n            bookingEditor_UpdateTime(time)\r\n        }\r\n    )\r\n\r\n    useBus(\r\n        '@@ui/EDIT_BOOKING_CALL',\r\n        (e) => {\r\n            let bookingId  = Number( e?.payload )\r\n            callBookingEditorForId(bookingId, setSidebarKey)\r\n        }\r\n    )\r\n\r\n    useBus(\r\n        '@@ui/FT_CELL_CLICK',\r\n        (e) => {\r\n            let time = e.payload\r\n            bookingEditor_UpdateTime(time)\r\n        }\r\n    )\r\n\r\n    useBus(\r\n        '@@ui/HOME_BTN_click', (e) => {\r\n            let reqDate = _Date.dateMsToDateN( Date.now() )\r\n            store.dispatch(bTableDateUPD(reqDate))\r\n        }\r\n    )\r\n\r\n    useBus(\r\n        '@@ui/TEST_BTN4',\r\n        (e) => {\r\n            getLastUpdate({})\r\n                .then(  res => console.log( (Date.now() - res.data)/1000) )\r\n                .catch( err => console.log(err) )\r\n        }\r\n\r\n        // (e) => {\r\n        //     store.dispatch()\r\n        // }\r\n    )\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <TopBar mode = { mode }/>\r\n            <div id=\"ContentWrapperAll\">\r\n                <div id=\"ContentWrapperInner\">\r\n                    <div id = \"inner\" className=\"inner\">\r\n                    {/* <FetchComponent2 /> */}\r\n                        <Content />\r\n                    </div>\r\n                </div>\r\n                {sidebar_isToggled && ( ADMIN_TOGGLE\r\n                                      ? <BookingEditor      key = {sidebarKey}/>\r\n                                      : <BookingEditorLight key = {sidebarKey}/> )\r\n                }\r\n                {flyersData_showEditor && ADMIN_TOGGLE && <FlyersEditor  key = {1}/>}\r\n            </div>\r\n            <BottomBar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\nfunction findTR0node(childNode) {\r\n    let node = childNode\r\n    while (node.nodeName !== 'TR') {\r\n        node = node.parentNode\r\n    }\r\n    while (!node.id) {\r\n        node = node.previousElementSibling\r\n    }\r\n    return node\r\n}\r\n\r\nfunction getBookingRec(bookingsArr, dataMap, bookingId) {\r\n    let bookingRec = bookingsArr.find(element => element[dataMap['bookingIdCI']] === bookingId)\r\n    let obj        = {}\r\n    for (const field in dataMap) {\r\n        obj[field.replace('CI','')] = bookingRec[ dataMap[field] ]\r\n    }\r\n    return obj\r\n}\r\n\r\nfunction callBookingEditorForId(bookingId, setSidebarKey) {\r\n    let bookingsArr = store.getState().mainState.bookingsData.arr\r\n    let arrDataMap  = APP_CONSTANTS.bookingsArrMap\r\n    let bookingObj  = getBookingRec(bookingsArr, arrDataMap, bookingId)\r\n\r\n    store.dispatch(sidebar_curObjUPD(bookingObj))\r\n\r\n    setSidebarKey(key => key + 1)\r\n    store.dispatch(toggleSidebarMD(true))\r\n}\r\n\r\nfunction bookingEditor_UpdateTime (time) {\r\n    let activeSidebarObj = SELECTORS.sidebar_isToggled(store.getState())\r\n                           ?   SELECTORS.sidebar_curObj(store.getState())\r\n                           :   null\r\n    if (activeSidebarObj?.time === time) { return }\r\n\r\n    let bookingObj = activeSidebarObj\r\n                   ?   {\r\n                           type: 'UPDATE',\r\n                           time,\r\n                           submitOptions: {toNew: true, toMove: true},\r\n                       }\r\n                   :   {\r\n                           type: 'INIT',\r\n                           time,\r\n                           flyerId: 'TOSET',\r\n                           submitOptions: {toNew: true},\r\n                       }\r\n\r\n    store.dispatch(sidebar_curObjUPD(bookingObj))\r\n\r\n    store.dispatch(toggleSidebarMD(true))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Test = () => {\r\n//     //debugger\r\n//      console.dir('test render!')//\r\n//     return (\r\n//         <div>\r\n//             TestComp\r\n//         </div>\r\n//     );\r\n// }\r\n","import React        from 'react'\r\nimport ReactDOM     from 'react-dom'\r\nimport { Provider}  from 'react-redux'\r\n\r\nimport { _Date } from \"JS/_Date\"\r\n\r\nimport { store,\r\n         SELECTORS,\r\n         periodUPD,\r\n         userDataUPD }          from 'index'\r\n\r\nimport { loadFlyersData,\r\n         REQ_GETBOOKINGS }         from 'JS/request.mjs'\r\n\r\nimport App                      from 'Сomponents/App.jsx'\r\n\r\nfunction RESIZE_OPT() {\r\n    document.documentElement.style.setProperty(\"--vh\", window.innerHeight * 0.01 + \"px\");\r\n}\r\n\r\nfunction ERROR_LOGGER(err, id = 'global') {\r\n    var stack   =  err.error && err.error.stack\r\n    var message = `ERR_logger ${id}: \\n`\r\n                + `${ (err && err.error) || err }`\r\n    if (stack) {\r\n        message += '\\n' + stack\r\n    }\r\n\r\n    if ( typeof message === 'object') {\r\n        message = JSON.stringify(message)\r\n    }\r\n\r\n    console.trace(message)\r\n    return message\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener( 'error' , ERROR_LOGGER )\r\nwindow.addEventListener( 'resize', RESIZE_OPT )\r\n\r\nwindow.onload = start\r\n\r\n\r\n\r\nasync function start() {\r\n    RESIZE_OPT()\r\n\r\n    checkUser()\r\n\r\n    renderApp()\r\n\r\n    getPeriod()\r\n\r\n    loadFlyersData()\r\n}// end start\r\n\r\nfunction renderApp() {\r\n    ReactDOM.render(\r\n        <Provider store={ store }>\r\n            <App />\r\n        </Provider>\r\n        ,\r\n        document.getElementById('root')\r\n    )\r\n}\r\n\r\n\r\nexport function checkUser() {\r\n    if (localStorage.getItem('name') &&\r\n        localStorage.getItem('role')) {\r\n\r\n        let user = {\r\n            name     : localStorage.getItem('name'),\r\n            ps       : localStorage.getItem('ps'),\r\n            mail     : localStorage.getItem('mail'),\r\n            role     : localStorage.getItem('role'),\r\n        }\r\n\r\n        store.dispatch( userDataUPD( user ) )\r\n        return user\r\n    }\r\n}\r\n\r\n\r\nexport function updateBookings() {\r\n    let period = getPeriod()\r\n    REQ_GETBOOKINGS(period)\r\n}\r\n\r\n\r\nfunction getPeriod(reqDate) {\r\n    let period = SELECTORS.period( store.getState() )\r\n\r\n    if (reqDate || !period.reqDate) {\r\n        period = setNewPeriod(reqDate)\r\n    }\r\n\r\n    return period\r\n}\r\n\r\nfunction setNewPeriod(reqDate = new Date()) {\r\n    let stDate         = new Date(reqDate)\r\n        stDate.setDate(stDate.getDate() - 7) //also take data for prev day\r\n\r\n    let endDate        = new Date(reqDate)\r\n        endDate.setDate(endDate.getDate() + 21)\r\n\r\n    reqDate =_Date.dateToYYYYMMDD(reqDate, '-')\r\n    stDate  =_Date.dateToYYYYMMDD(stDate, '-')\r\n    endDate =_Date.dateToYYYYMMDD(endDate, '-')\r\n\r\n    store.dispatch( periodUPD( {reqDate, stDate, endDate} ) )\r\n\r\n    REQ_GETBOOKINGS( {stDate, endDate} )\r\n\r\n    return {\r\n        reqDate,\r\n        stDate,\r\n        endDate\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    start,\r\n    getPeriod,\r\n}"],"sourceRoot":""}